import { LayerTranslation } from "..";
import { GlobalizedKeyRegisterRequest, TextTranslationPutRequest } from "./requests";
import { GlobalizedKeyRegisterResponse } from "./responses";
export declare class G11nService {
    readonly projecId: string;
    constructor(projecId: string);
    registerKey(request: GlobalizedKeyRegisterRequest): Promise<GlobalizedKeyRegisterResponse>;
    updateKeyName(id: string, newKeyName: string): Promise<void>;
    putTextTranslation(request: TextTranslationPutRequest): Promise<any>;
    fetchTranslation(id: string): Promise<any>;
}
export declare function registerTranslationKey(projectId: string, request: GlobalizedKeyRegisterRequest): Promise<GlobalizedKeyRegisterResponse>;
export declare function updateKeyName(id: string, request: {
    keyName: string;
}): Promise<any>;
export declare function putTextTranslation(projectId: string, request: TextTranslationPutRequest): Promise<any>;
export declare function fetchTextTranslation(id: string): Promise<any>;
export declare function putLayerKeyMap(projectId: string, request: {
    sceneId: string;
    layerId: string;
    keyId: string;
}): Promise<any>;
export declare function fetchTextTranslationFromLayer(projectId: string, request: {
    sceneId: string;
    layerId: string;
}): Promise<LayerTranslation | undefined>;
export declare function fetchTextTranslationsFromScene(projectId: string, request: {
    sceneId: string;
}): Promise<ReadonlyArray<LayerTranslation>>;
