import { ServiceResponse } from "../services-abstract";
export declare enum AssetType {
    uri = "URI",
    text = "TEXT",
    image = "IMAGE",
    icon = "ICON",
    illust = "ILLUST",
    color = "COLOR",
    file = "FILE",
    other = "UNKNOWN"
}
export interface RawAsset {
    id: string;
    name?: string;
    key?: string;
    type: AssetType;
    value: string;
    tags?: string[];
}
export interface VariantAsset {
    id: string;
    name: string;
    key: string;
    description: string;
    projectId: string;
    type: AssetType;
    tags?: string[];
    assets: Map<string, RawAsset>;
}
export interface RawAssetRegisterRequest {
    name?: string;
    type: AssetType;
    value: string;
    key?: string;
    tags?: string[];
}
export interface RawAssetUpdateRequest {
    id: string;
    name?: string;
    type?: AssetType;
    value?: string;
    tags?: string[];
}
export interface NestedAssetPutRequest {
    name?: string;
    value: string;
    tags?: string[];
}
export interface VariantAssetRegisterRequest {
    key?: string;
    name?: string;
    type: AssetType;
    description?: string;
    tags?: string[];
    initialAssets: Map<string, NestedAssetPutRequest>;
}
export interface VariantAddRequest {
    variantAssetId: string;
    variant: string;
    asset: NestedAssetPutRequest;
}
export interface VariantUpdateRequest {
    variantAssetId: string;
    variant: string;
    asset: NestedAssetPutRequest;
}
export interface VariantPutRequest {
    variantAssetId: string;
    variant: string;
    asset: NestedAssetPutRequest;
}
export interface VariantAssetAddRequest {
    variantId: string;
    asset: RawAssetRegisterRequest;
}
export interface VariantAssetRegisterResponse extends ServiceResponse<VariantAsset> {
}
export interface RawAssetRegisterResponse extends ServiceResponse<RawAsset> {
}
