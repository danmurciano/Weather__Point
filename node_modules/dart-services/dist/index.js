"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compileComplete = exports.defaultClient = exports.DartServices = void 0;
const axios_1 = __importDefault(require("axios"));
const deocrate_js_1 = require("./utils/deocrate-js");
const DEFAULT_BASE_URL = "https://dart-services.appspot.com/";
const BASE_URLS = [
    "https://dart-services.appspot.com/"
];
const API_PATH = "api/dartservices/v2";
/**
 * this is an error thrown by dart-services server, which is not a client problem, if you get this message, retry api call.
 */
const COMMON_DDC_ERRORS = [
    "Could not resolve the package 'flutter' in 'package:flutter/material.dart'"
];
/**
 * maximun retry number for handling common serverside errors.
 */
const MAX_RETRY = 5;
class DartServices {
    constructor(baseUrl) {
        this.baseUrl = baseUrl;
        /**
         * cursor that holds retry counts of requests.
         */
        this.retryCursors = new Map();
        this.axios = axios_1.default.create({
            baseURL: baseUrl + API_PATH
        });
    }
    /**
     * use this for flutter code compile
     * @param source
     */
    compileDDC(source, cursor) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const res = yield this.axios.post("/compileDDC", {
                    source: source,
                });
                return res.data;
            }
            catch (e) {
                if (COMMON_DDC_ERRORS.some((errmsg) => { var _a, _b; return ((_b = (_a = e.response.data.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : '').includes(errmsg); })) {
                    // console.warn('dart-services serverside issue detected.')
                    if (!cursor) {
                        // create cursor
                        cursor = Date.now();
                        this.retryCursors[cursor] = 1;
                    }
                    else {
                        // console.log(`retrying with cursor ${cursor}`)
                        this.retryCursors[cursor] = this.retryCursors[cursor] + 1;
                        if (this.retryCursors[cursor] > MAX_RETRY) {
                            // delete the cursor.
                            this.retryCursors.delete(cursor);
                            console.warn('retried, but failed. closing.');
                            return {
                                error: e.response.data.error,
                                sucess: false
                            };
                        }
                    }
                    console.warn('dart-services failed with serverside issues. retrying.. re entry of', this.retryCursors[cursor]);
                    return yield this.compileDDC(source, cursor);
                }
                return {
                    error: e.response.data.error,
                    sucess: false
                };
            }
        });
    }
    /**
     * use this for pure dart code compile. code with flutter dependency will refuse to compile.
     * @param source
     */
    compile(source) {
        return __awaiter(this, void 0, void 0, function* () {
            const res = yield this.axios.post("/compile", {
                source: source,
            });
            return res.data;
        });
    }
    /**
     * compiles and build decorated js
     * @param source
     */
    compileComplete(source) {
        return __awaiter(this, void 0, void 0, function* () {
            const compiled = yield this.compileDDC(source);
            if (compiled.error) {
                return {
                    error: compiled.error,
                    sucess: false
                };
            }
            else {
                const complete = deocrate_js_1.decorateJavascript(compiled === null || compiled === void 0 ? void 0 : compiled.result, { modulesBaseUrl: compiled.modulesBaseUrl });
                return {
                    result: complete,
                    sourceMap: null,
                    error: null,
                    sucess: true
                };
            }
        });
    }
}
exports.DartServices = DartServices;
exports.defaultClient = new DartServices(DEFAULT_BASE_URL);
function compileComplete(source) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield exports.defaultClient.compileComplete(source);
    });
}
exports.compileComplete = compileComplete;
//# sourceMappingURL=index.js.map