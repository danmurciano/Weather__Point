{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\";\nimport LocationResults from \"../Components/LocationResults\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nexport default function Location(weatherData) {\n  const {\n    0: location,\n    1: setLocation\n  } = useState(\"Nothing yet\");\n  const {\n    0: latitude,\n    1: setLatitude\n  } = useState(0);\n  const {\n    0: longitude,\n    1: setLongitude\n  } = useState(0);\n  let now = weatherData;\n  const {\n    0: weather,\n    1: setWeather\n  } = useState(null); // let weather = null;\n  // let weather = null;\n  // let currentTemp = \"unknown\";\n  // if (weather !== null) {\n  //   let currentTemp = (weather.current.temp - 273.15) * 1.8 + 32;\n  // } else {\n  //   let currentTemp = 20;\n  // }\n\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      class: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-9 results\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", location, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", `${latitude}, ${longitude}`, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", weather[0], \", \", weather[1], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-fluid footer\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\nLocation.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5 + \", \" + geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={minutely}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  return response2.data;\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","useState","axios","Header","Footer","Button","Table","LocationResults","Container","Divider","SearchBar","baseUrl","catchErrors","weatherResponse","Location","weatherData","location","setLocation","latitude","setLatitude","longitude","setLongitude","now","weather","setWeather","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","getInitialProps","query","search","geoUrl","process","env","MAPQUEST_KEY","payload","headers","geoResponse","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\"\nimport LocationResults from \"../Components/LocationResults\"\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\n\n\nexport default function Location(weatherData) {\n  const [location, setLocation] = useState(\"Nothing yet\");\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n\n  let now = weatherData;\n  const [weather, setWeather] = useState(null);\n  // let weather = null;\n\n  // let weather = null;\n  // let currentTemp = \"unknown\";\n  // if (weather !== null) {\n  //   let currentTemp = (weather.current.temp - 273.15) * 1.8 + 32;\n  // } else {\n  //   let currentTemp = 20;\n  // }\n\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n\n\n\n\n  return (\n    <div>\n      <Header />\n      <hr class=\"divider\"/>\n\n      <div class=\"container-fluid middle\">\n        <div class=\"row\">\n\n          <div class=\"col-md-9 results\">\n            <p> {location} </p>\n            <p> {`${latitude}, ${longitude}`} </p>\n            <p> {weather[0]}, {weather[1]} </p>\n          </div>\n        </div>\n\n        <div class=\"container-fluid footer\">\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5 + \", \" + geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={minutely}&units={imperial}&appid=${process.env.WEATHER_KEY}`\n  const response2 = await axios.get(weatherUrl, payload);\n  return response2.data;\n};\n"]},"metadata":{},"sourceType":"module"}