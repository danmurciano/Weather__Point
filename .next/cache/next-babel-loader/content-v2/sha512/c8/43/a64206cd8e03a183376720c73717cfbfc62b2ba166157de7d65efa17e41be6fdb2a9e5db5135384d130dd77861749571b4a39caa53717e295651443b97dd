{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\";\nimport LocationResults from \"../Components/LocationResults\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nexport default function Location(_ref) {\n  var location = _ref.location,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude,\n      weatherData = _ref.weatherData;\n  var weather = weatherResponse(weatherData);\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      \"class\": \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"row location-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"col-md-9 results\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", location, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"\".concat(latitude, \", \").concat(longitude), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"Temprature \".concat(weather.currentTemp) + String.fromCharCode(176), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"\".concat(weather.currentConditions), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"\".concat(weather.currentWindDeg, \" \").concat(weather.currentWindSpeed, \" MPH\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"container-fluid footer\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Location;\n\nLocation.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var search, geoUrl, payload, location, latitude, longitude, weatherUrl, response2, weatherData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref2.query.search;\n            geoUrl = \"https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=\".concat(process.env.MAPQUEST_KEY, \"&location=\").concat(search, \"&maxResults=1\");\n            payload = {\n              headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              }\n            }; // const geoResponse = await axios.get(geoUrl, payload);\n            // const geoData = geoResponse.data.results[0].locations[0];\n            // const location = geoData.adminArea5 + \", \" + geoData.adminArea3 + \", \" + geoData.adminArea1;\n            // const latitude = geoData.latLng.lat;\n            // const longitude = geoData.latLng.lng;\n\n            location = \"Helsinki, Southern Finland, FI\";\n            latitude = 60.17;\n            longitude = 24.94;\n            weatherUrl = \"https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&exclude={minutely}&units={imperial}&appid=\").concat(process.env.WEATHER_KEY);\n            _context.next = 9;\n            return axios.get(weatherUrl, payload);\n\n          case 9:\n            response2 = _context.sent;\n            // const weatherData = response2.data;\n            weatherData = response2.data;\n            return _context.abrupt(\"return\", {\n              location: location,\n              latitude: latitude,\n              longitude: longitude,\n              weatherData: weatherData\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","useState","axios","Header","Footer","Button","Table","LocationResults","Container","Divider","SearchBar","baseUrl","catchErrors","weatherResponse","Location","location","latitude","longitude","weatherData","weather","console","log","currentTemp","String","fromCharCode","currentConditions","currentWindDeg","currentWindSpeed","getInitialProps","search","query","geoUrl","process","env","MAPQUEST_KEY","payload","headers","weatherUrl","WEATHER_KEY","get","response2","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\"\nimport LocationResults from \"../Components/LocationResults\"\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\n\n\nexport default function Location({ location, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  console.log(weather);\n\n\n  return (\n    <div>\n      <Header />\n      <hr class=\"divider\"/>\n\n      <div class=\"container-fluid\">\n        <div class=\"row location-main\">\n\n          <div class=\"col-md-9 results\">\n            <p> {location} </p>\n            <p> {`${latitude}, ${longitude}`} </p>\n            <p> {`Temprature ${weather.currentTemp}` + String.fromCharCode(176)} </p>\n            <p> {`${weather.currentConditions}`} </p>\n            <p> {`${weather.currentWindDeg} ${weather.currentWindSpeed} MPH`} </p>\n\n          </div>\n        </div>\n\n        <div class=\"container-fluid footer\">\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  // const geoResponse = await axios.get(geoUrl, payload);\n  // const geoData = geoResponse.data.results[0].locations[0];\n  // const location = geoData.adminArea5 + \", \" + geoData.adminArea3 + \", \" + geoData.adminArea1;\n  // const latitude = geoData.latLng.lat;\n  // const longitude = geoData.latLng.lng;\n  const location = \"Helsinki, Southern Finland, FI\"\n  const latitude = 60.17\n  const longitude = 24.94\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={minutely}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}