{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\"; // import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\n\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location({\n  location,\n  location2,\n  coordinates,\n  latitude,\n  longitude,\n  weatherData\n}) {\n  const weather = weatherResponse(weatherData);\n  const {\n    0: timeRange,\n    1: setTimeRange\n  } = useState(\"daily\"); // console.log(weather.locationInfo, latitude, longitude);\n\n  function mapHourlyData(hourly) {\n    return hourly.map(h => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"daily-data\",\n          children: [\" \", `${h.time}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"daily-icon\",\n          src: `http://openweathermap.org/img/wn/${h.icon}@2x.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"daily-data\",\n          children: [\" \", `${h.temp}` + String.fromCharCode(176), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  } // function mapHourlyData(hourly) {\n  //   return hourly.map(h => (\n  //     <div class=\"col hourly-col\">\n  //       <p class=\"hourly-data\"> {`${h.time}`} </p>\n  //       <img class=\"daily-icon\" src={`http://openweathermap.org/img/wn/${h.icon}@2x.png`}/>\n  //       <p class=\"daily-data\"> {`${h.temp}` + String.fromCharCode(176)} </p>\n  //     </div>\n  //   ))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-main\",\n      style: {\n        backgroundImage: `url(/images/${weather.current.icon}.jpg)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-name\",\n                children: [\" \", location, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", location2, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 52\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"map marker alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), \" \", weather.coordinates, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"daily-icon\",\n                src: `/images/icons/${weather.current.icon}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", weather.current.conditions, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-temp location-row\",\n                children: [\" \", `${weather.current.temp}` + String.fromCharCode(176), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row location-buttom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-5 location-current\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \" Current \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Current, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-6 location-daily\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \" Daily \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this), timeRange === \"hourly\" ? mapHourlyData(weather.hourly.splice(0, 8)) : /*#__PURE__*/_jsxDEV(Daily, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\nLocation.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng; // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload); // const weatherData = response2.data;\n\n  const weatherData = response2.data;\n  return {\n    location,\n    location2,\n    latitude,\n    longitude,\n    weatherData\n  };\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","useState","axios","Header","Footer","Button","Current","Daily","Container","Divider","Icon","SearchBar","baseUrl","catchErrors","weatherResponse","_","Location","location","location2","coordinates","latitude","longitude","weatherData","weather","timeRange","setTimeRange","mapHourlyData","hourly","map","h","time","icon","temp","String","fromCharCode","backgroundImage","current","conditions","splice","getInitialProps","query","search","geoUrl","process","env","MAPQUEST_KEY","payload","headers","geoResponse","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","weatherUrl","WEATHER_KEY","response2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,CAAT,QAAkB,QAAlB;AAGA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA,SAA9C;AAAyDC,EAAAA;AAAzD,CAAlB,EAA0F;AACvG,QAAMC,OAAO,GAAGT,eAAe,CAACQ,WAAD,CAA/B;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4BxB,QAAQ,CAAC,OAAD,CAA1C,CAFuG,CAGvG;;AAKA,WAASyB,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,WAAOA,MAAM,CAACC,GAAP,CAAWC,CAAC,iBACjB;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE;AAAG,UAAA,KAAK,EAAC,YAAT;AAAA,0BAAyB,GAAEA,CAAC,CAACC,IAAK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,YAAX;AAAwB,UAAA,GAAG,EAAG,oCAAmCD,CAAC,CAACE,IAAK;AAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE;AAAG,UAAA,KAAK,EAAC,YAAT;AAAA,0BAAyB,GAAEF,CAAC,CAACG,IAAK,EAAV,GAAcC,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAaD,GAtBsG,CAwBvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACE;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAG,eAAcZ,OAAO,CAACa,OAAR,CAAgBL,IAAK;AAAvD,OAA9B;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,KAAK,EAAC,EAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA,iCAEE;AAAK,YAAA,KAAK,EAAC,kBAAX;AAAA,oCACE;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,sCACE;AAAG,gBAAA,KAAK,EAAC,eAAT;AAAA,gCAA2Bd,QAA3B,oBAAqC;AAAA,kCAAQC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,6CAAI,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,wBAAJ,OAAyCK,OAAO,CAACJ,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAK,gBAAA,KAAK,EAAC,YAAX;AAAwB,gBAAA,GAAG,EAAG,iBAAgBI,OAAO,CAACa,OAAR,CAAgBL,IAAK;AAAnE;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,gCAAKR,OAAO,CAACa,OAAR,CAAgBC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAG,gBAAA,KAAK,EAAC,4BAAT;AAAA,gCAAyC,GAAEd,OAAO,CAACa,OAAR,CAAgBJ,IAAK,EAAxB,GAA4BC,MAAM,CAACC,YAAP,CAAoB,GAApB,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,KAAK,EAAC,qBAAX;AAAA,sCACE;AAAK,gBAAA,KAAK,EAAC,wBAAX;AAAA,wCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAEX;AAAlB;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE;AAAK,gBAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,sBARF,eAUE;AAAK,gBAAA,KAAK,EAAC,sBAAX;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGC,SAAS,KAAK,QAAd,GACCE,aAAa,CAACH,OAAO,CAACI,MAAR,CAAeW,MAAf,CAAsB,CAAtB,EAAyB,CAAzB,CAAD,CADd,gBAGC,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAEf;AAAhB;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,eAuCE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAoDD;;AAEDP,QAAQ,CAACuB,eAAT,GAA2B,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAP,KAAiC;AAC1D,QAAMC,MAAM,GAAI,4FAA2FC,OAAO,CAACC,GAAR,CAAYC,YAAa,aAAYJ,MAAO,eAAvJ;AACA,QAAMK,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,0BAAoB;AAAtB;AAAX,GAAhB;AACA,QAAMC,WAAW,GAAG,MAAM9C,KAAK,CAAC+C,GAAN,CAAUP,MAAV,EAAkBI,OAAlB,CAA1B;AACA,QAAMI,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC,SAA5B,CAAsC,CAAtC,CAAhB;AACA,QAAMpC,QAAQ,GAAGiC,OAAO,CAACI,UAAzB;AACA,QAAMpC,SAAS,GAAGgC,OAAO,CAACK,UAAR,GAAqB,IAArB,GAA4BL,OAAO,CAACM,UAAtD;AACA,QAAMpC,QAAQ,GAAG8B,OAAO,CAACO,MAAR,CAAeC,GAAhC;AACA,QAAMrC,SAAS,GAAG6B,OAAO,CAACO,MAAR,CAAeE,GAAjC,CAR0D,CAS1D;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAI,2FAA0FxC,QAAS,QAAOC,SAAU,2BAA0BsB,OAAO,CAACC,GAAR,CAAYiB,WAAY,EAA1L;AACA,QAAMC,SAAS,GAAG,MAAM5D,KAAK,CAAC+C,GAAN,CAAUW,UAAV,EAAsBd,OAAtB,CAAxB,CAf0D,CAgB1D;;AACA,QAAMxB,WAAW,GAAGwC,SAAS,CAACX,IAA9B;AACA,SAAO;AAAElC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBE,IAAAA,QAAvB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA;AAA5C,GAAP;AACD,CAnBD","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\n// import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ location, location2, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = useState(\"daily\");\n  // console.log(weather.locationInfo, latitude, longitude);\n\n\n\n\n  function mapHourlyData(hourly) {\n    return hourly.map(h => (\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <p class=\"daily-data\"> {`${h.time}`} </p>\n        </div>\n        <div class=\"col-4\">\n          <img class=\"daily-icon\" src={`http://openweathermap.org/img/wn/${h.icon}@2x.png`}/>\n        </div>\n        <div class=\"col-4\">\n          <p class=\"daily-data\"> {`${h.temp}` + String.fromCharCode(176)} </p>\n        </div>\n      </div>\n    ))\n  }\n\n  // function mapHourlyData(hourly) {\n  //   return hourly.map(h => (\n  //     <div class=\"col hourly-col\">\n  //       <p class=\"hourly-data\"> {`${h.time}`} </p>\n  //       <img class=\"daily-icon\" src={`http://openweathermap.org/img/wn/${h.icon}@2x.png`}/>\n  //       <p class=\"daily-data\"> {`${h.temp}` + String.fromCharCode(176)} </p>\n  //     </div>\n  //   ))\n  // }\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header />\n\n      <div class=\"\">\n        <div class=\"location-main\">\n\n          <div class=\"location-results\">\n            <div class=\"location-top\">\n              <p class=\"location-name\"> {location} <span> {location2} </span> </p>\n              <p> <Icon name=\"map marker alternate\"/> {weather.coordinates} </p>\n              <img class=\"daily-icon\" src={`/images/icons/${weather.current.icon}.png`}/>\n              <p> {weather.current.conditions} </p>\n              <p class=\"location-temp location-row\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n            </div>\n\n            <div class=\"row location-buttom\">\n              <div class=\"col-5 location-current\">\n\n                <h3> Current </h3>\n                <Current weather={weather} />\n\n              </div>\n\n              <div class=\"col-1\"/>\n\n              <div class=\"col-6 location-daily\">\n                <h3> Daily </h3>\n                {timeRange === \"hourly\" ? (\n                  mapHourlyData(weather.hourly.splice(0, 8))\n                ) : (\n                  <Daily weather={weather} />\n                )\n              }\n              </div>\n\n\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, location2, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}