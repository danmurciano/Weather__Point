{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\",\n    _s = $RefreshSig$();\n\nimport React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location(_ref) {\n  _s();\n\n  var _this = this;\n\n  var city = _ref.city,\n      region = _ref.region,\n      country = _ref.country,\n      mapUrl = _ref.mapUrl,\n      coordinates = _ref.coordinates,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude,\n      weatherData = _ref.weatherData;\n  var weather = weatherResponse(weatherData);\n\n  var _React$useState = React.useState(\"Daily\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      timeRange = _React$useState2[0],\n      setTimeRange = _React$useState2[1]; // const [search, setSearch] = React.useState(\"\");\n\n\n  var router = useRouter();\n  var i = countries.findIndex(function (el) {\n    return el.code === country;\n  });\n  var countryName = countries[i].name;\n  var regionAndCountry;\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return /*#__PURE__*/_jsxDEV(Daily, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Hourly\":\n        return /*#__PURE__*/_jsxDEV(Hourly, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Current\":\n        return /*#__PURE__*/_jsxDEV(Current, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n  }\n\n  var handleItemClick = function handleItemClick(e, _ref2) {\n    var name = _ref2.name;\n    return _this.setTimeRange({\n      activeItem: name\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"page-main\",\n      style: {\n        backgroundImage: \"url(/images/\".concat(weather.current.icon, \".jpg)\")\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"page-location\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"class\": \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"location-top-border\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"row location-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  \"class\": \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    \"class\": \"location-city\",\n                    children: [\" \", city, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    \"class\": \"location-country\",\n                    children: [\" \", regionAndCountry, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"  \", weather.coordinates, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    \"class\": \"current-icon\",\n                    src: \"/images/icons2/\".concat(weather.current.icon, \".png\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    \"class\": \"location-temp\",\n                    children: [\" \", \"\".concat(weather.current.temp) + String.fromCharCode(176), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    \"class\": \"location-data\",\n                    children: [\" \", \"Feels Like \".concat(weather.current.feelsLike) + String.fromCharCode(176), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  \"class\": \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(Current, {\n                    weather: weather\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"location-top-border\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"location-buttom\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  \"class\": \"section-title\",\n                  children: \" HOURLY FORECAST \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  \"class\": \"hourly-row\",\n                  children: /*#__PURE__*/_jsxDEV(Hourly, {\n                    weather: weather\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"location-top-border\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"location-buttom\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  \"class\": \"section-title\",\n                  children: \" DAILY FORECAST \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  \"class\": \"hourly-row\",\n                  children: /*#__PURE__*/_jsxDEV(Daily, {\n                    weather: weather\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Location, \"93seHM6pvtlzaeLFH28y15ncFjA=\", false, function () {\n  return [useRouter];\n});\n\n_c = Location;\n\nLocation.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n    var search, geoUrl, payload, geoResponse, geoData, city, region, country, latitude, longitude, mapUrl, weatherUrl, response2, weatherData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref3.query.search;\n            geoUrl = \"https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=\".concat(process.env.MAPQUEST_KEY, \"&location=\").concat(search, \"&maxResults=1&thumbMaps=true\");\n            payload = {\n              headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              }\n            };\n            _context.next = 5;\n            return axios.get(geoUrl, payload);\n\n          case 5:\n            geoResponse = _context.sent;\n            geoData = geoResponse.data.results[0].locations[0];\n            city = geoData.adminArea5;\n            region = geoData.adminArea3;\n            country = geoData.adminArea1;\n            latitude = geoData.latLng.lat;\n            longitude = geoData.latLng.lng;\n            mapUrl = geoData.mapUrl.replace(\"zoom=12\", \"zoom=3\");\n            mapUrl = mapUrl.replace(\"marker-sm-50318A-1\", \"marker-sm-248cd6\");\n            mapUrl = mapUrl.replace(\"225,160\", \"240,150\");\n            weatherUrl = \"https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&units={imperial}&appid=\").concat(process.env.WEATHER_KEY);\n            _context.next = 18;\n            return axios.get(weatherUrl, payload);\n\n          case 18:\n            response2 = _context.sent;\n            weatherData = response2.data;\n            return _context.abrupt(\"return\", {\n              city: city,\n              region: region,\n              country: country,\n              mapUrl: mapUrl,\n              latitude: latitude,\n              longitude: longitude,\n              weatherData: weatherData\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","use","useRouter","axios","Header","Current","Daily","Hourly","Container","Divider","Icon","Menu","countries","baseUrl","catchErrors","weatherResponse","_","Location","city","region","country","mapUrl","coordinates","latitude","longitude","weatherData","weather","useState","timeRange","setTimeRange","router","i","findIndex","el","code","countryName","name","regionAndCountry","timeRangeSelect","handleItemClick","e","activeItem","backgroundImage","current","icon","temp","String","fromCharCode","feelsLike","getInitialProps","search","query","geoUrl","process","env","MAPQUEST_KEY","payload","headers","get","geoResponse","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","replace","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ city, region, country, mapUrl, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = React.useState(\"Daily\");\n  // const [search, setSearch] = React.useState(\"\");\n\n  const router = useRouter();\n\n\n  const i = countries.findIndex(el => el.code === country);\n  const countryName = countries[i].name;\n  let regionAndCountry\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return <Daily weather={weather} />\n        break;\n      case \"Hourly\":\n        return <Hourly weather={weather} />\n        break;\n      case \"Current\":\n        return <Current weather={weather} />\n        break;\n    }\n  }\n\n  const handleItemClick = (e, { name }) => this.setTimeRange({ activeItem: name });\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header/>\n\n      <div class=\"page-location\">\n        <div class=\"location-main\">\n          <div class=\"location-results\">\n            <div class=\"location-top-border\">\n              <div class=\"row location-top\">\n\n                <div class=\"col-6\">\n                  <p class=\"location-city\"> {city} </p>\n                  <p class=\"location-country\"> {regionAndCountry} </p>\n                  <p>  {weather.coordinates} </p>\n                  <img class=\"current-icon\" src={`/images/icons2/${weather.current.icon}.png`}/>\n                  <p class=\"location-temp\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n                  <p class=\"location-data\"> {`Feels Like ${weather.current.feelsLike}` + String.fromCharCode(176)} </p>\n                </div>\n\n                <div class=\"col-6\">\n                  <Current weather={weather} />\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"location-top-border\">\n              <div class=\"location-buttom\">\n                <p class=\"section-title\"> HOURLY FORECAST </p>\n                <div class=\"hourly-row\">\n                  <Hourly weather={weather} />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"location-top-border\">\n              <div class=\"location-buttom\">\n                <p class=\"section-title\"> DAILY FORECAST </p>\n                <div class=\"hourly-row\">\n                  <Daily weather={weather} />\n                </div>\n              </div>\n            </div>\n\n           </div>\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1&thumbMaps=true`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const city = geoData.adminArea5;\n  const region = geoData.adminArea3;\n  const country = geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  let mapUrl = geoData.mapUrl.replace(\"zoom=12\", \"zoom=3\");\n  mapUrl = mapUrl.replace(\"marker-sm-50318A-1\", \"marker-sm-248cd6\");\n  mapUrl = mapUrl.replace(\"225,160\", \"240,150\");\n\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  const weatherData = response2.data;\n  return { city, region, country, mapUrl, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}