{"ast":null,"code":"import mongoose from \"mongoose\";\nconst {\n  String,\n  Number,\n  Boolean\n} = mongoose.Schema.Types;\nconst LocationSchema = new mongoose.Schema({\n  name: {\n    type: string,\n    required: true\n  },\n  maxTemprature: [{\n    type: number,\n    required: true\n  }],\n  minTemprature: [{\n    type: number,\n    required: true\n  }],\n  dewPoint: [{\n    type: number,\n    required: true\n  }],\n  avgWind: [{\n    type: number,\n    required: true\n  }],\n  latitude: {\n    type: number,\n    required: true\n  },\n  skyClearness: [{\n    type: number,\n    required: true\n  }],\n  solarEnergy: [{\n    type: number,\n    required: true\n  }]\n});\nexport default mongoose.models.Location || mongoose.model(\"Location\", LocationSchema);","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/models/Location.js"],"names":["mongoose","String","Number","Boolean","Schema","Types","LocationSchema","name","type","string","required","maxTemprature","number","minTemprature","dewPoint","avgWind","latitude","skyClearness","solarEnergy","models","Location","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,IAA8BH,QAAQ,CAACI,MAAT,CAAgBC,KAApD;AAEA,MAAMC,cAAc,GAAG,IAAIN,QAAQ,CAACI,MAAb,CACrB;AACEG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADR;AAKEC,EAAAA,aAAa,EAAE,CAAC;AACdH,IAAAA,IAAI,EAAEI,MADQ;AAEdF,IAAAA,QAAQ,EAAE;AAFI,GAAD,CALjB;AASEG,EAAAA,aAAa,EAAE,CAAC;AACdL,IAAAA,IAAI,EAAEI,MADQ;AAEdF,IAAAA,QAAQ,EAAE;AAFI,GAAD,CATjB;AAaEI,EAAAA,QAAQ,EAAE,CAAC;AACTN,IAAAA,IAAI,EAAEI,MADG;AAETF,IAAAA,QAAQ,EAAE;AAFD,GAAD,CAbZ;AAiBEK,EAAAA,OAAO,EAAE,CAAC;AACRP,IAAAA,IAAI,EAAEI,MADE;AAERF,IAAAA,QAAQ,EAAE;AAFF,GAAD,CAjBX;AAqBEM,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEI,MADE;AAERF,IAAAA,QAAQ,EAAE;AAFF,GArBZ;AAyBEO,EAAAA,YAAY,EAAE,CAAC;AACbT,IAAAA,IAAI,EAAEI,MADO;AAEbF,IAAAA,QAAQ,EAAE;AAFG,GAAD,CAzBhB;AA6BEQ,EAAAA,WAAW,EAAE,CAAC;AACZV,IAAAA,IAAI,EAAEI,MADM;AAEZF,IAAAA,QAAQ,EAAE;AAFE,GAAD;AA7Bf,CADqB,CAAvB;AAsCA,eAAeV,QAAQ,CAACmB,MAAT,CAAgBC,QAAhB,IAA4BpB,QAAQ,CAACqB,KAAT,CAAe,UAAf,EAA2Bf,cAA3B,CAA3C","sourcesContent":["import mongoose from \"mongoose\";\n\nconst { String, Number, Boolean } = mongoose.Schema.Types;\n\nconst LocationSchema = new mongoose.Schema(\n  {\n    name: {\n      type: string,\n      required: true\n    },\n    maxTemprature: [{\n      type: number,\n      required: true\n    }],\n    minTemprature: [{\n      type: number,\n      required: true\n    }],\n    dewPoint: [{\n      type: number,\n      required: true\n    }],\n    avgWind: [{\n      type: number,\n      required: true\n    }],\n    latitude: {\n      type: number,\n      required: true\n    },\n    skyClearness: [{\n      type: number,\n      required: true\n    }],\n    solarEnergy: [{\n      type: number,\n      required: true\n    }]\n  }\n)\n\n\nexport default mongoose.models.Location || mongoose.model(\"Location\", LocationSchema);\n"]},"metadata":{},"sourceType":"module"}