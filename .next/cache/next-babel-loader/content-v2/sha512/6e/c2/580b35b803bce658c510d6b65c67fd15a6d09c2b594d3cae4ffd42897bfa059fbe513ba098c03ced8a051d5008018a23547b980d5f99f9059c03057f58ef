{"ast":null,"code":"export default function weatherResponse(weather) {\n  const userTime = new Date();\n  const userOffset = userTime.getTimezoneOffset() * 60;\n\n  function latitude(lat) {\n    let direction;\n\n    if (lat >= 0) {\n      direction = \"N\";\n    } else {\n      direction = \"S\";\n    }\n\n    return Math.abs(lat).toFixed(1) + direction;\n  }\n\n  ;\n\n  function longitude(lon) {\n    let direction;\n\n    if (lon >= 0) {\n      direction = \"E\";\n    } else {\n      direction = \"W\";\n    }\n\n    return Math.abs(lon).toFixed(1) + direction;\n  }\n\n  ;\n\n  function timeConvert(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric'\n    };\n    return date.toLocaleTimeString(\"en-US\", options);\n  }\n\n  ;\n\n  function getDay(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = {\n      weekday: 'long'\n    };\n    return new Intl.DateTimeFormat('en-US', options).format(date);\n  }\n\n  ;\n\n  function getHour(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = {\n      hour: 'numeric'\n    };\n    return date.toLocaleTimeString(\"en-US\", options);\n  }\n\n  ;\n\n  function tempConvert(calvin) {\n    return Math.round((calvin - 273.15) * 1.8 + 32);\n  }\n\n  ;\n\n  function windDirection(deg) {\n    const x = deg / 22.5 + 0.5;\n    let dir1;\n    let dir2;\n\n    switch (true) {\n      case x >= 15 || x < 2:\n        dir1 = \"N\";\n        break;\n\n      case x >= 3 && x < 6:\n        dir1 = \"E\";\n        break;\n\n      case x >= 7 && x < 10:\n        dir1 = \"S\";\n        break;\n\n      case x >= 11 && x < 14:\n        dir1 = \"W\";\n        break;\n\n      default:\n        dir1 = \"\";\n    }\n\n    switch (true) {\n      case x >= 1 && x < 4:\n        dir2 = \"NE\";\n        break;\n\n      case x >= 5 && x < 8:\n        dir2 = \"SE\";\n        break;\n\n      case x >= 9 && x < 12:\n        dir2 = \"SW\";\n        break;\n\n      case x >= 13 && x < 16:\n        dir2 = \"NW\";\n        break;\n\n      default:\n        dir2 = \"\";\n    }\n\n    return dir1 + dir2;\n  }\n\n  ;\n  const locationInfo = {\n    lat: latitude(weather.lat),\n    lon: longitude(weather.lon)\n  };\n  const current = {\n    sunrise: timeConvert(weather.current.sunrise, weather.timezone_offset),\n    sunset: timeConvert(weather.current.sunset, weather.timezone_offset),\n    conditions: weather.current.weather[0].description,\n    icon: weather.current.weather[0].icon,\n    temp: tempConvert(weather.current.temp),\n    feelsLike: tempConvert(weather.current.feels_like),\n    // chanceOfRain: weather.hourly[0].pop * 100,\n    chanceOfRain: 0,\n    precipitation: weather.minutely[0].precipitation,\n    humidity: weather.current.humidity,\n    windSpeed: Math.round(weather.current.wind_speed),\n    windDeg: windDirection(weather.current.wind_deg),\n    pressure: weather.current.pressure,\n    visibility: weather.current.visibility / 1609.34,\n    uvi: Math.round(weather.current.uvi)\n  };\n\n  function mapDailyData(daily) {\n    return daily.map(d => ({\n      day: getDay(d.dt, weather.timezone_offset),\n      icon: d.weather[0].icon,\n      max: tempConvert(d.temp.max),\n      min: tempConvert(d.temp.min)\n    }));\n  }\n\n  const daily = mapDailyData(weather.daily);\n\n  function mapHourlyData(hourly) {\n    return hourly.map(h => ({\n      time: getHour(h.dt, weather.timezone_offset),\n      icon: h.weather[0].icon,\n      temp: tempConvert(h.temp)\n    }));\n  }\n\n  const hourlyNow = {\n    time: \"Now\",\n    icon: weather.current.weather[0].icon,\n    temp: tempConvert(weather.current.temp)\n  };\n  let hourly = mapHourlyData(weather.hourly.splice(1, 24));\n  hourly.unshift(hourlyNow);\n  return {\n    locationInfo,\n    current,\n    daily,\n    hourly\n  };\n} // {\n//   \"lat\": 33.44,\n//   \"lon\": -94.04,\n//   \"timezone\": \"America/Chicago\",\n//   \"timezone_offset\": -21600,\n//   \"current\": {\n//     \"dt\": 1595243443,\n//     \"sunrise\": 1608124431,\n//     \"sunset\": 1608160224,\n//     \"temp\": 274.75,\n//     \"feels_like\": 270.4,\n//     \"pressure\": 1017,\n//     \"humidity\": 96,\n//     \"dew_point\": 274.18,\n//     \"uvi\": 0,\n//     \"clouds\": 90,\n//     \"visibility\": 6437,\n//     \"wind_speed\": 3.6,\n//     \"wind_deg\": 320,\n//     \"weather\": [\n//       {\n//         \"id\": 701,\n//         \"main\": \"Mist\",\n//         \"description\": \"mist\",\n//         \"icon\": \"50n\"\n//       }\n//     ]\n//   },\n//     \"hourly\": [\n//     {\n//       \"dt\": 1595242800,\n//       \"temp\": 274.75,\n//       \"feels_like\": 271.22,\n//       \"pressure\": 1017,\n//       \"humidity\": 96,\n//       \"dew_point\": 274.18,\n//       \"uvi\": 0,\n//       \"clouds\": 90,\n//       \"visibility\": 1765,\n//       \"wind_speed\": 2.43,\n//       \"wind_deg\": 303,\n//       \"weather\": [\n//         {\n//           \"id\": 804,\n//           \"main\": \"Clouds\",\n//           \"description\": \"overcast clouds\",\n//           \"icon\": \"04n\"\n//         }\n//       ],\n//       \"pop\": 0.1\n//     },\n//     ...\n//   }\n// \"daily\": [\n//         {\n//       \"dt\": 1595268000,\n//       \"sunrise\": 1608124431,\n//       \"sunset\": 1608160224,\n//       \"temp\": {\n//         \"day\": 278.14,\n//         \"min\": 273.15,\n//         \"max\": 279.4,\n//         \"night\": 273.15,\n//         \"eve\": 275.82,\n//         \"morn\": 275.35\n//       },\n//       \"feels_like\": {\n//         \"day\": 273.53,\n//         \"night\": 270.26,\n//         \"eve\": 271.89,\n//         \"morn\": 272.11\n//       },\n//       \"pressure\": 1021,\n//       \"humidity\": 70,\n//       \"dew_point\": 273.27,\n//       \"wind_speed\": 3.74,\n//       \"wind_deg\": 323,\n//       \"weather\": [\n//         {\n//           \"id\": 803,\n//           \"main\": \"Clouds\",\n//           \"description\": \"broken clouds\",\n//           \"icon\": \"04d\"\n//         }\n//       ],\n//       \"clouds\": 60,\n//       \"pop\": 0.84,\n//       \"uvi\": 2.41\n//     },\n//     ...\n//     },\n// \"alerts\": [\n//     {\n//       \"sender_name\": \"NWS Tulsa (Eastern Oklahoma)\",\n//       \"event\": \"Heat Advisory\",\n//       \"start\": 1597341600,\n//       \"end\": 1597366800,\n//       \"description\": \"...HEAT ADVISORY REMAINS IN EFFECT FROM 1 PM THIS AFTERNOON TO\\n8 PM CDT THIS EVENING...\\n* WHAT...Heat index values of 105 to 109 degrees expected.\\n* WHERE...Creek, Okfuskee, Okmulgee, McIntosh, Pittsburg,\\nLatimer, Pushmataha, and Choctaw Counties.\\n* WHEN...From 1 PM to 8 PM CDT Thursday.\\n* IMPACTS...The combination of hot temperatures and high\\nhumidity will combine to create a dangerous situation in which\\nheat illnesses are possible.\"\n//     },\n//     ...\n//   ]","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/utils/weatherResponse.js"],"names":["weatherResponse","weather","userTime","Date","userOffset","getTimezoneOffset","latitude","lat","direction","Math","abs","toFixed","longitude","lon","timeConvert","epoch","offset","date","options","hour","minute","toLocaleTimeString","getDay","weekday","Intl","DateTimeFormat","format","getHour","tempConvert","calvin","round","windDirection","deg","x","dir1","dir2","locationInfo","current","sunrise","timezone_offset","sunset","conditions","description","icon","temp","feelsLike","feels_like","chanceOfRain","precipitation","minutely","humidity","windSpeed","wind_speed","windDeg","wind_deg","pressure","visibility","uvi","mapDailyData","daily","map","d","day","dt","max","min","mapHourlyData","hourly","h","time","hourlyNow","splice","unshift"],"mappings":"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":["export default function weatherResponse(weather) {\n  const userTime = new Date;\n  const userOffset = userTime.getTimezoneOffset() * 60;\n\n\n  function latitude(lat) {\n    let direction;\n    if (lat >= 0) {\n      direction = \"N\";\n    } else {\n      direction = \"S\"\n    }\n    return Math.abs(lat).toFixed(1) + direction;\n  };\n\n  function longitude(lon) {\n    let direction;\n    if (lon >= 0) {\n      direction = \"E\";\n    } else {\n      direction = \"W\"\n    }\n    return Math.abs(lon).toFixed(1) + direction;\n  };\n\n  function timeConvert(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = { hour: 'numeric', minute: 'numeric' };\n    return date.toLocaleTimeString(\"en-US\", options);\n  };\n\n  function getDay(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = { weekday: 'long' };\n    return new Intl.DateTimeFormat('en-US', options).format(date);\n  };\n\n  function getHour(epoch, offset) {\n    const date = new Date((epoch + offset + userOffset) * 1000);\n    const options = { hour: 'numeric' };\n    return date.toLocaleTimeString(\"en-US\", options);\n  };\n\n\n  function tempConvert(calvin) {\n    return Math.round((calvin - 273.15) * 1.8 + 32);\n  };\n\n\n  function windDirection(deg) {\n    const x = deg / 22.5 + 0.5;\n    let dir1;\n    let dir2;\n\n    switch(true) {\n      case (x >= 15 || x < 2):\n      dir1 = \"N\";\n      break;\n      case (x >= 3 && x < 6):\n      dir1 = \"E\";\n      break;\n      case (x >= 7 && x < 10):\n      dir1 = \"S\";\n      break;\n      case (x >= 11 && x < 14):\n      dir1 = \"W\";\n      break;\n      default:\n      dir1 = \"\";\n    }\n\n    switch(true) {\n      case (x >= 1 && x < 4):\n      dir2 = \"NE\";\n      break;\n      case (x >= 5 && x < 8):\n      dir2 = \"SE\";\n      break;\n      case (x >= 9 && x < 12):\n      dir2 = \"SW\";\n      break;\n      case (x >= 13 && x < 16):\n      dir2 = \"NW\";\n      break;\n      default:\n      dir2 = \"\";\n    }\n    return dir1 + dir2;\n  };\n\n\n  const locationInfo = {\n    lat: latitude(weather.lat),\n    lon: longitude(weather.lon)\n  }\n\n\n  const current = {\n    sunrise: timeConvert(weather.current.sunrise, weather.timezone_offset),\n    sunset: timeConvert(weather.current.sunset, weather.timezone_offset),\n    conditions: weather.current.weather[0].description,\n    icon: weather.current.weather[0].icon,\n    temp: tempConvert(weather.current.temp),\n    feelsLike: tempConvert(weather.current.feels_like),\n    // chanceOfRain: weather.hourly[0].pop * 100,\n    chanceOfRain: 0,\n    precipitation: weather.minutely[0].precipitation,\n    humidity: weather.current.humidity,\n    windSpeed: Math.round(weather.current.wind_speed),\n    windDeg: windDirection(weather.current.wind_deg),\n    pressure: weather.current.pressure,\n    visibility: weather.current.visibility / 1609.34,\n    uvi: Math.round(weather.current.uvi)\n  }\n\n\n  function mapDailyData(daily) {\n    return daily.map(d => ({\n      day: getDay(d.dt, weather.timezone_offset),\n      icon: d.weather[0].icon,\n      max: tempConvert(d.temp.max),\n      min: tempConvert(d.temp.min)\n    }))\n  }\n\n  const daily = mapDailyData(weather.daily);\n\n\n  function mapHourlyData(hourly) {\n    return hourly.map(h => ({\n      time: getHour(h.dt, weather.timezone_offset),\n      icon: h.weather[0].icon,\n      temp: tempConvert(h.temp)\n    }))\n  }\n\n  const hourlyNow = {\n    time: \"Now\",\n    icon: weather.current.weather[0].icon,\n    temp: tempConvert(weather.current.temp)\n  }\n\n  let hourly = mapHourlyData(weather.hourly.splice(1, 24));\n  hourly.unshift(hourlyNow);\n\n  return { locationInfo, current, daily, hourly };\n}\n\n\n\n\n// {\n//   \"lat\": 33.44,\n//   \"lon\": -94.04,\n//   \"timezone\": \"America/Chicago\",\n//   \"timezone_offset\": -21600,\n//   \"current\": {\n//     \"dt\": 1595243443,\n//     \"sunrise\": 1608124431,\n//     \"sunset\": 1608160224,\n//     \"temp\": 274.75,\n//     \"feels_like\": 270.4,\n//     \"pressure\": 1017,\n//     \"humidity\": 96,\n//     \"dew_point\": 274.18,\n//     \"uvi\": 0,\n//     \"clouds\": 90,\n//     \"visibility\": 6437,\n//     \"wind_speed\": 3.6,\n//     \"wind_deg\": 320,\n//     \"weather\": [\n//       {\n//         \"id\": 701,\n//         \"main\": \"Mist\",\n//         \"description\": \"mist\",\n//         \"icon\": \"50n\"\n//       }\n//     ]\n//   },\n//     \"hourly\": [\n//     {\n//       \"dt\": 1595242800,\n//       \"temp\": 274.75,\n//       \"feels_like\": 271.22,\n//       \"pressure\": 1017,\n//       \"humidity\": 96,\n//       \"dew_point\": 274.18,\n//       \"uvi\": 0,\n//       \"clouds\": 90,\n//       \"visibility\": 1765,\n//       \"wind_speed\": 2.43,\n//       \"wind_deg\": 303,\n//       \"weather\": [\n//         {\n//           \"id\": 804,\n//           \"main\": \"Clouds\",\n//           \"description\": \"overcast clouds\",\n//           \"icon\": \"04n\"\n//         }\n//       ],\n//       \"pop\": 0.1\n//     },\n//     ...\n//   }\n// \"daily\": [\n//         {\n//       \"dt\": 1595268000,\n//       \"sunrise\": 1608124431,\n//       \"sunset\": 1608160224,\n//       \"temp\": {\n//         \"day\": 278.14,\n//         \"min\": 273.15,\n//         \"max\": 279.4,\n//         \"night\": 273.15,\n//         \"eve\": 275.82,\n//         \"morn\": 275.35\n//       },\n//       \"feels_like\": {\n//         \"day\": 273.53,\n//         \"night\": 270.26,\n//         \"eve\": 271.89,\n//         \"morn\": 272.11\n//       },\n//       \"pressure\": 1021,\n//       \"humidity\": 70,\n//       \"dew_point\": 273.27,\n//       \"wind_speed\": 3.74,\n//       \"wind_deg\": 323,\n//       \"weather\": [\n//         {\n//           \"id\": 803,\n//           \"main\": \"Clouds\",\n//           \"description\": \"broken clouds\",\n//           \"icon\": \"04d\"\n//         }\n//       ],\n//       \"clouds\": 60,\n//       \"pop\": 0.84,\n//       \"uvi\": 2.41\n//     },\n//     ...\n//     },\n// \"alerts\": [\n//     {\n//       \"sender_name\": \"NWS Tulsa (Eastern Oklahoma)\",\n//       \"event\": \"Heat Advisory\",\n//       \"start\": 1597341600,\n//       \"end\": 1597366800,\n//       \"description\": \"...HEAT ADVISORY REMAINS IN EFFECT FROM 1 PM THIS AFTERNOON TO\\n8 PM CDT THIS EVENING...\\n* WHAT...Heat index values of 105 to 109 degrees expected.\\n* WHERE...Creek, Okfuskee, Okmulgee, McIntosh, Pittsburg,\\nLatimer, Pushmataha, and Choctaw Counties.\\n* WHEN...From 1 PM to 8 PM CDT Thursday.\\n* IMPACTS...The combination of hot temperatures and high\\nhumidity will combine to create a dangerous situation in which\\nheat illnesses are possible.\"\n//     },\n//     ...\n//   ]\n"]},"metadata":{},"sourceType":"module"}