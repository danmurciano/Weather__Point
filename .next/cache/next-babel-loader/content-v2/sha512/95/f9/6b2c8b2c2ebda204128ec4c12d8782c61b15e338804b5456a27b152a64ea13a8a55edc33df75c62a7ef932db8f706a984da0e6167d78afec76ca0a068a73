{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/index.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nexport default function Home() {\n  const [searchState, setSearchState] = React.useState(\"\");\n  let search = searchState;\n  const {\n    0: location,\n    1: setLocation\n  } = useState(\"Nothing yet\");\n  const {\n    0: latitude,\n    1: setLatitude\n  } = useState(0);\n  const {\n    0: longitude,\n    1: setLongitude\n  } = useState(0);\n  const {\n    0: weatherData,\n    1: setWeatherData\n  } = useState(null);\n  let now = weatherData;\n  const {\n    0: weather,\n    1: setWeather\n  } = useState(null); // let weather = null;\n  // let weather = null;\n  // let currentTemp = \"unknown\";\n  // if (weather !== null) {\n  //   let currentTemp = (weather.current.temp - 273.15) * 1.8 + 32;\n  // } else {\n  //   let currentTemp = 20;\n  // }\n\n  const router = useRouter();\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n  function handleChange(event) {\n    setSearchState(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    search = \"\";\n    setSearchState(\"\");\n    handleSubmit(event);\n  }\n\n  async function handleSubmit(event) {\n    router.push(`/location?search=${search}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"page-main page-index\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid middle\",\n      style: {\n        backgroundImage: `url(/images/banner5.jpg)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/index.js"],"names":["React","useState","axios","useRouter","Header","Footer","Button","Table","Container","Divider","SearchBar","baseUrl","catchErrors","weatherResponse","Home","searchState","setSearchState","search","location","setLocation","latitude","setLatitude","longitude","setLongitude","weatherData","setWeatherData","now","weather","setWeather","router","success","setSuccess","loading","setLoading","disabled","setDisabled","error","setError","handleChange","event","target","value","handleClearSearch","handleSubmit","push","backgroundImage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,MAAIgB,MAAM,GAAGF,WAAb;AACA,QAAM;AAAA,OAACG,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAC,aAAD,CAAxC;AACA,QAAM;AAAA,OAACmB,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACqB,SAAD;AAAA,OAAYC;AAAZ,MAA4BtB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACuB,WAAD;AAAA,OAAcC;AAAd,MAAgCxB,QAAQ,CAAC,IAAD,CAA9C;AACA,MAAIyB,GAAG,GAAGF,WAAV;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwB3B,QAAQ,CAAC,IAAD,CAAtC,CAR6B,CAS7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM4B,MAAM,GAAG1B,SAAS,EAAxB;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB/B,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBjC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BnC,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;;AAGA,WAASqC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BvB,IAAAA,cAAc,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD;;AAED,WAASC,iBAAT,CAA2BH,KAA3B,EAAkC;AAChCtB,IAAAA,MAAM,GAAG,EAAT;AACAD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA2B,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AACD;;AAGD,iBAAeI,YAAf,CAA4BJ,KAA5B,EAAmC;AACjCV,IAAAA,MAAM,CAACe,IAAP,CAAa,oBAAmB3B,MAAO,EAAvC;AACD;;AAID,sBACE;AAAK,IAAA,KAAK,EAAC,sBAAX;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,KAAK,EAAC,wBAAX;AAAoC,MAAA,KAAK,EAAE;AAAE4B,QAAAA,eAAe,EAAG;AAApB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\"\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\n\n\nexport default function Home() {\n  const [searchState, setSearchState] = React.useState(\"\");\n  let search = searchState;\n  const [location, setLocation] = useState(\"Nothing yet\");\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weatherData, setWeatherData] = useState(null);\n  let now = weatherData;\n  const [weather, setWeather] = useState(null);\n  // let weather = null;\n\n  // let weather = null;\n  // let currentTemp = \"unknown\";\n  // if (weather !== null) {\n  //   let currentTemp = (weather.current.temp - 273.15) * 1.8 + 32;\n  // } else {\n  //   let currentTemp = 20;\n  // }\n\n  const router = useRouter();\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n\n  function handleChange(event) {\n    setSearchState(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    search = \"\";\n    setSearchState(\"\");\n    handleSubmit(event);\n  }\n\n\n  async function handleSubmit(event) {\n    router.push(`/location?search=${search}`);\n  }\n\n\n\n  return (\n    <div class=\"page-main page-index\">\n      <Header />\n\n      <div class=\"container-fluid middle\" style={{ backgroundImage: `url(/images/banner5.jpg)` }}>\n\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}