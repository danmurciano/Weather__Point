{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar3.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Table from 'react-bootstrap/Table';\nimport { cityList } from \"../public/city-list\";\nvar cities = cityList;\n\nfunction SearchBar3() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(\"12\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  console.log(search); // const getSuggestions = search => {\n  //   const inputValue = search.trim().toLowerCase();\n  //   const inputLength = inputValue.length;\n  //\n  //   return inputLength < 3 ? [] : cities.filter(city =>\n  //     city.city.toLowerCase().slice(0, inputLength) === inputValue\n  //   );\n  // };\n\n  function handleChange(event) {\n    setSearch(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    setSearch(\"\");\n    setSuggestions([]);\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (search.length > 1) {\n                router.push(\"/location?search=\".concat(search)); // setSearch(\"\");\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var onSuggestionsFetchRequested = function onSuggestionsFetchRequested(_ref) {\n    var search = _ref.search;\n\n    _this.setState({\n      suggestions: getSuggestions(search)\n    });\n  };\n\n  var getSuggestionValue = function getSuggestionValue(suggestion) {\n    return suggestion.city + \", \" + suggestion.country;\n  };\n\n  var renderSuggestion = function renderSuggestion(suggestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"search-table\",\n      children: [\" \", suggestion.city, \", \", suggestion.country, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var inputProps = {\n    placeholder: 'Search City or Zip Code',\n    search: search,\n    onChange: function onChange() {\n      return handleChange(event);\n    },\n    onSubmit: function onSubmit() {\n      return handleSubmit(event);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(SearchBar3, \"5iXwPVAKpyVdMKp3vBrCzgk/7NU=\");\n\n_c = SearchBar3;\nexport default SearchBar3;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar3\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar3.js"],"names":["React","Autosuggest","Table","cityList","cities","SearchBar3","useState","search","setSearch","suggestions","setSuggestions","console","log","handleChange","event","target","value","handleClearSearch","handleSubmit","length","router","push","onSuggestionsFetchRequested","setState","getSuggestions","getSuggestionValue","suggestion","city","country","renderSuggestion","inputProps","placeholder","onChange","onSubmit"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,IAAMC,MAAM,GAAGD,QAAf;;AAGA,SAASE,UAAT,GAAsB;AAAA;;AAAA;;AAAA,wBACQL,KAAK,CAACM,QAAN,CAAe,IAAf,CADR;AAAA;AAAA,MACbC,MADa;AAAA,MACLC,SADK;;AAAA,yBAEkBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAFlB;AAAA;AAAA,MAEbG,WAFa;AAAA,MAEAC,cAFA;;AAIpBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAJoB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,WAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BN,IAAAA,SAAS,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD;;AAED,WAASC,iBAAT,CAA2BH,KAA3B,EAAkC;AAChCN,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD;;AAvBmB,WAyBLQ,YAzBK;AAAA;AAAA;;AAAA;AAAA,6EAyBpB,iBAA4BJ,KAA5B;AAAA;AAAA;AAAA;AAAA;AACE,kBAAIP,MAAM,CAACY,MAAP,GAAgB,CAApB,EAAuB;AACrBC,gBAAAA,MAAM,CAACC,IAAP,4BAAgCd,MAAhC,GADqB,CAErB;AACD;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBoB;AAAA;AAAA;;AAgCpB,MAAMe,2BAA2B,GAAG,SAA9BA,2BAA8B,OAAgB;AAAA,QAAbf,MAAa,QAAbA,MAAa;;AAClD,IAAA,KAAI,CAACgB,QAAL,CAAc;AACZd,MAAAA,WAAW,EAAEe,cAAc,CAACjB,MAAD;AADf,KAAd;AAGD,GAJD;;AAOA,MAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,UAAU;AAAA,WAAIA,UAAU,CAACC,IAAX,GAAkB,IAAlB,GAAyBD,UAAU,CAACE,OAAxC;AAAA,GAArC;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,UAAU;AAAA,wBACjC;AAAK,eAAM,cAAX;AAAA,sBAA4BA,UAAU,CAACC,IAAvC,QAA+CD,UAAU,CAACE,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,aADiC;AAAA,GAAnC;;AAIA,MAAME,UAAU,GAAG;AACjBC,IAAAA,WAAW,EAAE,yBADI;AAEjBxB,IAAAA,MAAM,EAANA,MAFiB;AAGjByB,IAAAA,QAAQ,EAAE;AAAA,aAAMnB,YAAY,CAACC,KAAD,CAAlB;AAAA,KAHO;AAIjBmB,IAAAA,QAAQ,EAAE;AAAA,aAAMf,YAAY,CAACJ,KAAD,CAAlB;AAAA;AAJO,GAAnB;AAOA,sBACE,qCADF;AAKD;;GA1DQT,U;;KAAAA,U;AA+DT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Table from 'react-bootstrap/Table';\nimport { cityList } from \"../public/city-list\";\n\n\nconst cities = cityList;\n\n\nfunction SearchBar3() {\n  const [search, setSearch] = React.useState(\"12\");\n  const [suggestions, setSuggestions] = React.useState([]);\n\n  console.log(search);\n\n  // const getSuggestions = search => {\n  //   const inputValue = search.trim().toLowerCase();\n  //   const inputLength = inputValue.length;\n  //\n  //   return inputLength < 3 ? [] : cities.filter(city =>\n  //     city.city.toLowerCase().slice(0, inputLength) === inputValue\n  //   );\n  // };\n\n\n  function handleChange(event) {\n    setSearch(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    setSearch(\"\");\n    setSuggestions([])\n  }\n\n  async function handleSubmit(event) {\n    if (search.length > 1) {\n      router.push(`/location?search=${search}`);\n      // setSearch(\"\");\n    }\n  }\n\n  const onSuggestionsFetchRequested = ({ search }) => {\n    this.setState({\n      suggestions: getSuggestions(search)\n    });\n  };\n\n\n  const getSuggestionValue = suggestion => suggestion.city + \", \" + suggestion.country;\n\n\n  const renderSuggestion = suggestion => (\n    <div class=\"search-table\"> {suggestion.city}, {suggestion.country} </div>\n  );\n\n  const inputProps = {\n    placeholder: 'Search City or Zip Code',\n    search,\n    onChange: () => handleChange(event),\n    onSubmit: () => handleSubmit(event)\n  };\n\n  return (\n    <>\n    </>\n  );\n\n}\n\n\n\n\nexport default SearchBar3;\n"]},"metadata":{},"sourceType":"module"}