{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar2.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash'; // import faker from 'faker'\n\nimport React from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport { cityList } from \"../public/city-list\"; // const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nconst source = cityList;\nconst initialState = {\n  loading: false,\n  results: [],\n  value: ''\n};\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState;\n\n    case 'START_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        value: action.query\n      });\n\n    case 'FINISH_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        results: action.results\n      });\n\n    case 'UPDATE_SELECTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.selection\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nconst resultRenderer = ({\n  city\n}) => /*#__PURE__*/_jsxDEV(Label, {\n  content: city\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 38\n}, this);\n\nconsole.log(city);\nexport default function SearchBar2() {\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState);\n  const {\n    loading,\n    results,\n    value\n  } = state;\n  const timeoutRef = React.useRef();\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n\n      const isMatch = result => re.test(result.city);\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 6,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        loading: loading,\n        onResultSelect: (e, data) => dispatch({\n          type: 'UPDATE_SELECTION',\n          selection: data.result\n        }),\n        onSearchChange: handleSearchChange,\n        resultRenderer: resultRenderer,\n        results: results,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 10,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflowX: 'auto'\n          },\n          children: JSON.stringify({\n            loading,\n            results,\n            value\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar2.js"],"names":["_","React","Search","Grid","Header","Segment","Label","cityList","source","initialState","loading","results","value","exampleReducer","state","action","type","query","selection","Error","resultRenderer","city","console","log","SearchBar2","dispatch","useReducer","timeoutRef","useRef","handleSearchChange","useCallback","e","data","clearTimeout","current","setTimeout","length","re","RegExp","escapeRegExp","isMatch","result","test","filter","useEffect","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\n// import faker from 'faker'\nimport React from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nimport { cityList } from \"../public/city-list\";\n\n// const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nconst source = cityList;\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nconst resultRenderer = ({ city }) => <Label content={city} />\n\nconsole.log(city);\n\nexport default function SearchBar2() {\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n  const { loading, results, value } = state\n\n  const timeoutRef = React.useRef()\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i')\n      const isMatch = (result) => re.test(result.city)\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n  return (\n    <Grid>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result })\n          }\n          onSearchChange={handleSearchChange}\n          resultRenderer={resultRenderer}\n          results={results}\n          value={value}\n        />\n      </Grid.Column>\n\n      <Grid.Column width={10}>\n        <Segment>\n          <Header>State</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify({ loading, results, value }, null, 2)}\n          </pre>\n          <Header>Options</Header>\n\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}