{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location({\n  city,\n  region,\n  country,\n  mapUrl,\n  coordinates,\n  latitude,\n  longitude,\n  weatherData\n}) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = React.useState(\"Daily\"); // const [search, setSearch] = React.useState(\"\");\n\n  const router = useRouter();\n  const i = countries.findIndex(el => el.code === country);\n  const countryName = countries[i].name;\n  let regionAndCountry;\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return /*#__PURE__*/_jsxDEV(Daily, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Hourly\":\n        return /*#__PURE__*/_jsxDEV(Hourly, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Current\":\n        return /*#__PURE__*/_jsxDEV(Current, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n  }\n\n  const handleItemClick = (e, {\n    name\n  }) => this.setTimeRange({\n    activeItem: name\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-main\",\n      style: {\n        backgroundImage: `url(/images/${weather.current.icon}.jpg)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"page-location\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-top-border\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-city\",\n                children: [\" \", city, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-country\",\n                children: [\" \", regionAndCountry, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"map marker alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), \" \", weather.coordinates, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"location-field\",\n                  children: [\" SUNRISE\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"location-data\",\n                    children: [\" \", `${weather.current.sunrise}`, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"location-field\",\n                  children: [\" SUNSET\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"location-data\",\n                    children: [\" \", `${weather.current.sunset}`, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-temp\",\n                children: [\" \", `${weather.current.temp}` + String.fromCharCode(176), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-data\",\n                children: [\" \", `Feels Like ${weather.current.feelsLike}` + String.fromCharCode(176), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row location-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-field\",\n                    children: \" WIND \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-data\",\n                    children: [\" \", `${weather.current.windDeg} ${weather.current.windSpeed} mph`, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-field\",\n                    children: \" HUMIDITY \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-data\",\n                    children: [\" \", `${weather.current.humidity} %`, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-field\",\n                    children: \" CHANCE OF RAIN \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"location-data\",\n                    children: [\" \", `${weather.current.chanceOfRain} %`, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    class: \"current-icon\",\n                    src: `/images/icons2/${weather.current.icon}.png`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Current, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-buttom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"\",\n                children: /*#__PURE__*/_jsxDEV(Hourly, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: timeRangeSelect(timeRange)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\nLocation.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1&thumbMaps=true`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const city = geoData.adminArea5;\n  const region = geoData.adminArea3;\n  const country = geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  let mapUrl = geoData.mapUrl.replace(\"zoom=12\", \"zoom=3\");\n  mapUrl = mapUrl.replace(\"marker-sm-50318A-1\", \"marker-sm-248cd6\");\n  mapUrl = mapUrl.replace(\"225,160\", \"240,150\");\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  const weatherData = response2.data;\n  return {\n    city,\n    region,\n    country,\n    mapUrl,\n    latitude,\n    longitude,\n    weatherData\n  };\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","use","useRouter","axios","Header","Current","Daily","Hourly","Container","Divider","Icon","Menu","countries","baseUrl","catchErrors","weatherResponse","_","Location","city","region","country","mapUrl","coordinates","latitude","longitude","weatherData","weather","timeRange","setTimeRange","useState","router","i","findIndex","el","code","countryName","name","regionAndCountry","timeRangeSelect","handleItemClick","e","activeItem","backgroundImage","current","icon","sunrise","sunset","temp","String","fromCharCode","feelsLike","windDeg","windSpeed","humidity","chanceOfRain","getInitialProps","query","search","geoUrl","process","env","MAPQUEST_KEY","payload","headers","geoResponse","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","replace","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ city, region, country, mapUrl, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = React.useState(\"Daily\");\n  // const [search, setSearch] = React.useState(\"\");\n\n  const router = useRouter();\n\n\n  const i = countries.findIndex(el => el.code === country);\n  const countryName = countries[i].name;\n  let regionAndCountry\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return <Daily weather={weather} />\n        break;\n      case \"Hourly\":\n        return <Hourly weather={weather} />\n        break;\n      case \"Current\":\n        return <Current weather={weather} />\n        break;\n    }\n  }\n\n  const handleItemClick = (e, { name }) => this.setTimeRange({ activeItem: name });\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header/>\n\n      <div class=\"page-location\">\n        <div class=\"location-main\">\n          <div class=\"location-results\">\n            <div class=\"location-top-border\">\n              <p class=\"location-city\"> {city} </p>\n              <p class=\"location-country\"> {regionAndCountry} </p>\n              <p> <Icon name=\"map marker alternate\"/> {weather.coordinates} </p>\n              <div class=\"col\">\n                <p class=\"location-field\"> SUNRISE\n                <span class=\"location-data\"> {`${weather.current.sunrise}`} </span></p>\n              </div>\n              <div class=\"col\">\n                <p class=\"location-field\"> SUNSET\n                <span class=\"location-data\"> {`${weather.current.sunset}`} </span></p>\n              </div>\n              <p class=\"location-temp\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n              <p class=\"location-data\"> {`Feels Like ${weather.current.feelsLike}` + String.fromCharCode(176)} </p>\n\n              <div class=\"row location-top\">\n                <div class=\"col-2\"/>\n                <div class=\"col-2\">\n                  <p class=\"location-field\"> WIND </p>\n                  <p class=\"location-data\"> {`${weather.current.windDeg} ${weather.current.windSpeed} mph`} </p>\n                </div>\n                <div class=\"col-2\">\n                  <p class=\"location-field\"> HUMIDITY </p>\n                  <p class=\"location-data\"> {`${weather.current.humidity} %`} </p>\n                </div>\n                <div class=\"col-2\">\n                  <p class=\"location-field\"> CHANCE OF RAIN </p>\n                  <p class=\"location-data\"> {`${weather.current.chanceOfRain} %`} </p>\n                </div>\n                <div class=\"col-2\">\n                  <img class=\"current-icon\" src={`/images/icons2/${weather.current.icon}.png`}/>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <Current weather={weather} />\n              </div>\n\n            </div>\n\n            <div class=\"location-buttom\">\n\n              <div class=\"\">\n                <Hourly weather={weather} />\n              </div>\n\n              <div>\n                {timeRangeSelect(timeRange)}\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1&thumbMaps=true`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const city = geoData.adminArea5;\n  const region = geoData.adminArea3;\n  const country = geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  let mapUrl = geoData.mapUrl.replace(\"zoom=12\", \"zoom=3\");\n  mapUrl = mapUrl.replace(\"marker-sm-50318A-1\", \"marker-sm-248cd6\");\n  mapUrl = mapUrl.replace(\"225,160\", \"240,150\");\n\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  const weatherData = response2.data;\n  return { city, region, country, mapUrl, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}