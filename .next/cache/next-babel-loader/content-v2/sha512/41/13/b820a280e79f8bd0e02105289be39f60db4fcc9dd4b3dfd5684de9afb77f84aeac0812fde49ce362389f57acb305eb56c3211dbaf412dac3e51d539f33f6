{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/locationB.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\";\nimport LocationResults from \"../Components/LocationResults\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function LocationB({\n  location,\n  location2,\n  latitude,\n  longitude,\n  weatherData\n}) {\n  const weather = weatherResponse(weatherData);\n  console.log(weather);\n\n  function mapDailyData(daily) {\n    return daily.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"daily-data\",\n          children: [\" \", `${d.day}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"daily-icon\",\n          src: `http://openweathermap.org/img/wn/${d.icon}@2x.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"daily-data\",\n          children: [\" \", `${d.max}` + String.fromCharCode(176), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"daily-data\",\n          children: [\" \", `${d.min}` + String.fromCharCode(176), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"page-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nLocationB.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng; // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const baseUrl = \"https://api.weather.com/swagger-docs/sun\";\n  const payload2 = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    apiKey: process.env.WEATHER_KEY_B\n  };\n  const weatherUrl = `${baseUrl}/v3/sunV3CurrentsOnDemand.json${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const weatherUrl2 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/daily/{10}day.json`;\n  const weatherUrl3 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/hourly/{24}hour.json`;\n  const response2 = await axios.get(weatherUrl2, payload2); // const weatherData = response2.data;\n\n  const weatherData = response2.data;\n  return {\n    location,\n    location2,\n    latitude,\n    longitude,\n    weatherData\n  };\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/locationB.js"],"names":["React","useState","axios","Header","Footer","Button","Table","LocationResults","Container","Divider","SearchBar","baseUrl","catchErrors","weatherResponse","_","LocationB","location","location2","latitude","longitude","weatherData","weather","console","log","mapDailyData","daily","map","d","day","icon","max","String","fromCharCode","min","getInitialProps","query","search","geoUrl","process","env","MAPQUEST_KEY","payload","headers","geoResponse","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","payload2","apiKey","WEATHER_KEY_B","weatherUrl","WEATHER_KEY","weatherUrl2","weatherUrl3","response2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\"\nimport LocationResults from \"../Components/LocationResults\"\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function LocationB({ location, location2, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  console.log(weather);\n\n  function mapDailyData(daily) {\n    return daily.map(d => (\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <p class=\"daily-data\"> {`${d.day}`} </p>\n        </div>\n        <div class=\"col-4\">\n          <img class=\"daily-icon\" src={`http://openweathermap.org/img/wn/${d.icon}@2x.png`}/>\n        </div>\n        <div class=\"col-2\">\n          <p class=\"daily-data\"> {`${d.max}` + String.fromCharCode(176)} </p>\n        </div>\n        <div class=\"col-2\">\n          <p class=\"daily-data\"> {`${d.min}` + String.fromCharCode(176)} </p>\n        </div>\n      </div>\n    ))\n  }\n\n\n  return (\n    <div class=\"page-main\">\n      <Header />\n\n\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n    </div>\n  );\n}\n\nLocationB.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const baseUrl = \"https://api.weather.com/swagger-docs/sun\"\n  const payload2 = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" }, apiKey: process.env.WEATHER_KEY_B }\n  const weatherUrl = `${baseUrl}/v3/sunV3CurrentsOnDemand.json${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const weatherUrl2 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/daily/{10}day.json`;\n  const weatherUrl3 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/hourly/{24}hour.json`;\n  const response2 = await axios.get(weatherUrl2, payload2);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, location2, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}