{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar3.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Table from 'react-bootstrap/Table';\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { cityList } from \"../public/city-list\";\nconst cities = cityList;\n\nconst renderInputComponent = inputProps => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"search-bar\",\n  children: /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      transparent: true,\n      size: \"large\",\n      className: \"searchBarInput\",\n      name: \"search\",\n      placeholder: \"Search City or Zip Code\",\n      value: search,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      className: \"searchBarButton\",\n      type: \"submit\",\n      icon: search.length < 1 ? \"search\" : \"delete\",\n      onClick: search.length < 1 ? handleSubmit : handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength < 3 ? [] : cities.filter(city => city.city.toLowerCase().slice(0, inputLength) === inputValue);\n};\n\nconst getSuggestionValue = suggestion => suggestion.city + \", \" + suggestion.country;\n\nconst renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"search-table\",\n  children: [suggestion.city, \", \", suggestion.country]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n\nclass SearchBar3 extends React.Component {\n  constructor() {\n    super(); // Autosuggest is a controlled component.\n    // This means that you need to provide an input value\n    // and an onChange handler that updates this value (see below).\n    // Suggestions also need to be provided to the Autosuggest,\n    // and they are initially empty because the Autosuggest is closed.\n\n    _defineProperty(this, \"onChange\", (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    });\n\n    _defineProperty(this, \"onSuggestionsFetchRequested\", ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    });\n\n    _defineProperty(this, \"onSuggestionsClearRequested\", () => {\n      this.setState({\n        suggestions: []\n      });\n    });\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: 'Search City or Zip Code',\n      value,\n      onChange: this.onChange,\n      onSubmit: this.handleSubmit\n    };\n    return /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      onSuggestionHighlighted: this.onSuggestionHighlighted,\n      getSuggestionValue: getSuggestionValue,\n      renderInputComponent: renderInputComponent,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchBar3;","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar3.js"],"names":["React","Autosuggest","Table","Form","Input","Button","Icon","cityList","cities","renderInputComponent","inputProps","search","handleChange","length","handleSubmit","handleClearSearch","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","filter","city","slice","getSuggestionValue","suggestion","country","renderSuggestion","SearchBar3","Component","constructor","event","newValue","setState","suggestions","state","render","placeholder","onChange","onSubmit","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionHighlighted"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Table from 'react-bootstrap/Table';\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { cityList } from \"../public/city-list\";\n\n\nconst cities = cityList;\n\n\nconst renderInputComponent = inputProps => (\n  <div class=\"search-bar\">\n    <Form>\n      <Form.Input\n        transparent\n        size=\"large\"\n        className=\"searchBarInput\"\n        name=\"search\"\n        placeholder=\"Search City or Zip Code\"\n        value={search}\n        onChange={handleChange}\n      />\n      <Button\n        size=\"small\"\n        className=\"searchBarButton\"\n        type=\"submit\"\n        icon={search.length < 1 ? \"search\" : \"delete\"}\n        onClick={search.length < 1 ? handleSubmit : handleClearSearch}\n      />\n    </Form>\n  </div>\n);\n\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength < 3 ? [] : cities.filter(city =>\n    city.city.toLowerCase().slice(0, inputLength) === inputValue\n  );\n};\n\n\nconst getSuggestionValue = suggestion => suggestion.city + \", \" + suggestion.country;\n\n\nconst renderSuggestion = suggestion => (\n  <div class=\"search-table\">\n    {suggestion.city}, {suggestion.country}\n  </div>\n);\n\nclass SearchBar3 extends React.Component {\n  constructor() {\n    super();\n\n    // Autosuggest is a controlled component.\n    // This means that you need to provide an input value\n    // and an onChange handler that updates this value (see below).\n    // Suggestions also need to be provided to the Autosuggest,\n    // and they are initially empty because the Autosuggest is closed.\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: 'Search City or Zip Code',\n      value,\n      onChange: this.onChange,\n      onSubmit: this.handleSubmit\n    };\n\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        onSuggestionHighlighted={this.onSuggestionHighlighted}\n        getSuggestionValue={getSuggestionValue}\n        renderInputComponent={renderInputComponent}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default SearchBar3;\n"]},"metadata":{},"sourceType":"module"}