{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'; // import Button from \"./Button\";\n\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\nvar options = cityList;\nvar useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12\n    }\n  }\n}); // function handleChange(event) {\n//   setSearch(event.target.value);\n// }\n//\n// function handleClearSearch(event) {\n//   // setSearch(\"\");\n//   handleSubmit(event);\n// }\n\nexport default function SearchBar4() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1]; // createFilterOptions(config(10)) => filterOptions;\n\n\n  var filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (value.length > 1) {\n                router.push(\"/location?search=\".concat(search)); // setSearch(\"\");\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"class\": \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: function onChange(event, newValue) {\n        setValue(newValue);\n      },\n      inputValue: inputValue,\n      onInputChange: function onInputChange(event, newInputValue) {\n        setInputValue(newInputValue);\n      },\n      id: \"controllable-states-demo\",\n      options: inputValue.length < 3 ? [] : options.map(function (option) {\n        return option.city + \", \" + option.country;\n      }),\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Search City or Zip Code\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 32\n        }, _this);\n      },\n      filterOptions: filterOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      className: \"searchBarButton\",\n      type: \"submit\",\n      icon: \"search\",\n      onClick: value.length < 1 ? handleSubmit : handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SearchBar4, \"/ok7muqaJRhPLch78QiCZskBzqM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar4;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar4\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js"],"names":["React","TextField","Autocomplete","createFilterOptions","Form","Input","Button","Icon","makeStyles","cityList","options","useStyles","option","fontSize","backgroundColor","marginRight","SearchBar4","classes","useState","value","setValue","inputValue","setInputValue","filterOptions","limit","matchFrom","handleSubmit","event","length","router","push","search","newValue","newInputValue","map","city","country","width","params","handleClearSearch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\n// import Button from \"./Button\";\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\n\n\nconst options = cityList;\n\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12,\n    },\n  },\n});\n\n// function handleChange(event) {\n//   setSearch(event.target.value);\n// }\n//\n// function handleClearSearch(event) {\n//   // setSearch(\"\");\n//   handleSubmit(event);\n// }\n\n\n\nexport default function SearchBar4() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  // createFilterOptions(config(10)) => filterOptions;\n\n  const filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n\n  async function handleSubmit(event) {\n    if (value.length > 1) {\n      router.push(`/location?search=${search}`);\n      // setSearch(\"\");\n    }\n  }\n\n\n  return (\n  <div class=\"search-bar\">\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {setValue(newValue)}}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {setInputValue(newInputValue)}}\n      id=\"controllable-states-demo\"\n      options={inputValue.length < 3 ? [] : options.map(option => option.city + \", \" + option.country)}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Search City or Zip Code\" variant=\"outlined\" />}\n      filterOptions={filterOptions}\n    />\n    <Button\n      size=\"small\"\n      className=\"searchBarButton\"\n      type=\"submit\"\n      icon=\"search\"\n      onClick={value.length < 1 ? handleSubmit : handleClearSearch}\n    />\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}