{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRouter } from \"next/router\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'; // import Button from \"./Button\";\n\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\nconst options = cityList;\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12\n    }\n  }\n}); // function handleChange(event) {\n//   setSearch(event.target.value);\n// }\n//\n// function handleClearSearch(event) {\n//   // setSearch(\"\");\n//   handleSubmit(event);\n// }\n\nexport default function SearchBar4() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const router = useRouter(); // createFilterOptions(config(10)) => filterOptions;\n\n  const filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n\n  function handleChange(event) {\n    setInputValue(event.target.value);\n    setValue(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    setInputValue(\"\");\n    setValue(\"\");\n  }\n\n  async function handleSubmit(event) {\n    if (inputValue.length > 1) {\n      router.push(`/location?search=${inputValue}`);\n      setInputValue(\"\");\n    }\n  }\n\n  async function handleSelect(event, newValue) {\n    router.push(`/location?search=${newValue}`);\n    setInputValue(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"row search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        handleSelect(event, newValue);\n      },\n      inputValue: inputValue,\n      onInputChange: (event, newInputValue) => {\n        setInputValue(newInputValue);\n      },\n      id: \"controllable-states-demo\",\n      options: inputValue.length < 3 ? [] : options.map(option => option.city + \", \" + option.country),\n      style: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        label: \"Search City or Zip Code\",\n        variant: \"outlined\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this),\n      filterOptions: filterOptions,\n      size: \"small\",\n      freeSolo: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      className: inputValue.length > 0 ? \"searchBarButton\" : \"hidden-button\",\n      type: \"clear\",\n      icon: \"delete\",\n      onClick: handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      className: \"searchBarButton\",\n      type: \"submit\",\n      icon: inputValue.length < 1 ? \"search\" : \"search\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js"],"names":["React","useRouter","TextField","Autocomplete","createFilterOptions","Form","Input","Button","Icon","makeStyles","cityList","options","useStyles","option","fontSize","backgroundColor","marginRight","SearchBar4","classes","value","setValue","useState","inputValue","setInputValue","router","filterOptions","limit","matchFrom","handleChange","event","target","handleClearSearch","handleSubmit","length","push","handleSelect","newValue","newInputValue","map","city","country","width","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRouter } from \"next/router\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\n// import Button from \"./Button\";\nimport { Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\n\n\nconst options = cityList;\n\n\n\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12,\n    },\n  },\n});\n\n// function handleChange(event) {\n//   setSearch(event.target.value);\n// }\n//\n// function handleClearSearch(event) {\n//   // setSearch(\"\");\n//   handleSubmit(event);\n// }\n\n\n\nexport default function SearchBar4() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n\n\n  const router = useRouter();\n\n  // createFilterOptions(config(10)) => filterOptions;\n\n  const filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n\n  function handleChange(event) {\n    setInputValue(event.target.value);\n    setValue(event.target.value);\n  }\n\n  function handleClearSearch(event) {\n    setInputValue(\"\");\n    setValue(\"\");\n  }\n\n  async function handleSubmit(event) {\n    if (inputValue.length > 1) {\n      router.push(`/location?search=${inputValue}`);\n      setInputValue(\"\");\n    }\n  }\n\n  async function handleSelect(event, newValue) {\n    router.push(`/location?search=${newValue}`);\n    setInputValue(\"\");\n  }\n\n\n  return (\n  <div class=\"row search-bar\">\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {handleSelect(event, newValue)}}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {setInputValue(newInputValue)}}\n      id=\"controllable-states-demo\"\n      options={inputValue.length < 3 ? [] : options.map(option => option.city + \", \" + option.country)}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Search City or Zip Code\" variant=\"outlined\" />}\n      filterOptions={filterOptions}\n      size=\"small\"\n      freeSolo\n    />\n    <Button\n      size=\"small\"\n      className={inputValue.length > 0 ? \"searchBarButton\" : \"hidden-button\"}\n      type=\"clear\"\n      icon=\"delete\"\n      onClick={handleClearSearch}\n    />\n    <Button\n      size=\"small\"\n      className=\"searchBarButton\"\n      type=\"submit\"\n      icon={inputValue.length < 1 ? \"search\" : \"search\"}\n      onClick={handleSubmit}\n    />\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}