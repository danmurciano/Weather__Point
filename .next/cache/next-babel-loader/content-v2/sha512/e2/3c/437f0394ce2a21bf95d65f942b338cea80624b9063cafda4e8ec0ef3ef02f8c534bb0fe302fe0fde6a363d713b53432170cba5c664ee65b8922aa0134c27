{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from \"./Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\nvar cities = cityList;\nvar useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12\n    }\n  }\n});\n\nfunction handleChange(event) {\n  setSearch(event.target.value);\n}\n\nfunction handleClearSearch(event) {\n  setSearch(\"\");\n  handleSubmit(event);\n}\n\nfunction handleSubmit(_x) {\n  return _handleSubmit.apply(this, arguments);\n}\n\nfunction _handleSubmit() {\n  _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (search.length > 1) {\n              router.push(\"/location?search=\".concat(search)); // setSearch(\"\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleSubmit.apply(this, arguments);\n}\n\nexport default function SearchBar4() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      suggestions = _React$useState4[0],\n      setSuggestions = _React$useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: search.name,\n      onChange: handleChange,\n      id: \"location-select\",\n      style: {\n        background: \"white\",\n        borderRadius: \"15px\",\n        width: \"100%\",\n        fontSize: \"20px\"\n      },\n      options: search,\n      classes: {\n        option: classes.option\n      },\n      autoHighlight: true,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name;\n      } // renderOption={option => (\n      //   <React.Fragment>\n      //     {option.name}\n      //   </React.Fragment>\n      // )}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Search City or Zip Code\",\n          variant: \"filled\",\n          inputProps: _objectSpread(_objectSpread({}, params.inputProps), {}, {\n            autoComplete: 'new-password' // disable autocomplete and autofill\n\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar4, \"b04NCXhhXVlCrWCJjbbyQm1kwWw=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar4;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar4\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js"],"names":["React","TextField","Autocomplete","Button","makeStyles","cityList","cities","useStyles","option","fontSize","marginRight","handleChange","event","setSearch","target","value","handleClearSearch","handleSubmit","search","length","router","push","SearchBar4","classes","useState","suggestions","setSuggestions","name","background","borderRadius","width","params","inputProps","autoComplete"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,IAAMC,MAAM,GAAGD,QAAf;AAGA,IAAME,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAEN,gBAAY;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVD,MAAAA,QAAQ,EAAE;AAFA;AAFN;AADmB,CAAD,CAA5B;;AAUA,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BC,EAAAA,SAAS,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAT;AACD;;AAED,SAASC,iBAAT,CAA2BJ,KAA3B,EAAkC;AAChCC,EAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,EAAAA,YAAY,CAACL,KAAD,CAAZ;AACD;;SAEcK,Y;;;;;2EAAf,iBAA4BL,KAA5B;AAAA;AAAA;AAAA;AAAA;AACE,gBAAIM,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrBC,cAAAA,MAAM,CAACC,IAAP,4BAAgCH,MAAhC,GADqB,CAErB;AACD;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,eAAe,SAASI,UAAT,GAAsB;AAAA;;AAAA;;AACnC,MAAMC,OAAO,GAAGhB,SAAS,EAAzB;;AADmC,wBAEPP,KAAK,CAACwB,QAAN,CAAe,EAAf,CAFO;AAAA;AAAA,MAE5BN,MAF4B;AAAA,MAEpBL,SAFoB;;AAAA,yBAGGb,KAAK,CAACwB,QAAN,CAAe,EAAf,CAHH;AAAA;AAAA,MAG5BC,WAH4B;AAAA,MAGfC,cAHe;;AAKnC,sBACE;AAAA,2BACA,QAAC,YAAD;AACE,MAAA,KAAK,EAAER,MAAM,CAACS,IADhB;AAEE,MAAA,QAAQ,EAAEhB,YAFZ;AAGE,MAAA,EAAE,EAAC,iBAHL;AAIE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,UAAU,EAAE,OAAd;AAAuBC,QAAAA,YAAY,EAAE,MAArC;AAA6CC,QAAAA,KAAK,EAAE,MAApD;AAA4DrB,QAAAA,QAAQ,EAAE;AAAtE,OAJT;AAKE,MAAA,OAAO,EAAES,MALX;AAME,MAAA,OAAO,EAAE;AACPV,QAAAA,MAAM,EAAEe,OAAO,CAACf;AADT,OANX;AASE,MAAA,aAAa,MATf;AAUE,MAAA,cAAc,EAAE,wBAAAA,MAAM;AAAA,eAAIA,MAAM,CAACmB,IAAX;AAAA,OAVxB,CAWE;AACA;AACA;AACA;AACA;AAfF;AAgBE,MAAA,WAAW,EAAE,qBAAAI,MAAM;AAAA,4BACjB,QAAC,SAAD,kCACMA,MADN;AAEE,UAAA,KAAK,EAAC,yBAFR;AAGE,UAAA,OAAO,EAAC,QAHV;AAIE,UAAA,UAAU,kCACLA,MAAM,CAACC,UADF;AAERC,YAAAA,YAAY,EAAE,cAFN,CAEsB;;AAFtB;AAJZ;AAAA;AAAA;AAAA;AAAA,iBADiB;AAAA;AAhBrB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GArCuBX,U;UACNf,S;;;KADMe,U","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from \"./Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\n\n\nconst cities = cityList;\n\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12,\n    },\n  },\n});\n\nfunction handleChange(event) {\n  setSearch(event.target.value);\n}\n\nfunction handleClearSearch(event) {\n  setSearch(\"\");\n  handleSubmit(event);\n}\n\nasync function handleSubmit(event) {\n  if (search.length > 1) {\n    router.push(`/location?search=${search}`);\n    // setSearch(\"\");\n  }\n}\n\nexport default function SearchBar4() {\n  const classes = useStyles();\n  const [search, setSearch] = React.useState(\"\");\n  const [suggestions, setSuggestions] = React.useState([]);\n\n  return (\n    <div>\n    <Autocomplete\n      value={search.name}\n      onChange={handleChange}\n      id=\"location-select\"\n      style={{ background: \"white\", borderRadius: \"15px\", width: \"100%\", fontSize: \"20px\"}}\n      options={search}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={option => option.name}\n      // renderOption={option => (\n      //   <React.Fragment>\n      //     {option.name}\n      //   </React.Fragment>\n      // )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Search City or Zip Code\"\n          variant=\"filled\"\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}