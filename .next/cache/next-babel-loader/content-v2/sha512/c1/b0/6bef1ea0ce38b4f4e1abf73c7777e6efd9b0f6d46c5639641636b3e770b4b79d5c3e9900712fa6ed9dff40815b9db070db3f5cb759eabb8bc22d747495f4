{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Button from \"./Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\nvar options = cityList;\nvar useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12\n    }\n  }\n});\n\nfunction handleChange(event) {\n  setSearch(event.target.value);\n}\n\nfunction handleClearSearch(event) {\n  setSearch(\"\");\n  handleSubmit(event);\n}\n\nfunction handleSubmit(_x) {\n  return _handleSubmit.apply(this, arguments);\n}\n\nfunction _handleSubmit() {\n  _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (search.length > 1) {\n              router.push(\"/location?search=\".concat(search)); // setSearch(\"\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleSubmit.apply(this, arguments);\n}\n\nexport default function SearchBar4() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1]; // createFilterOptions(config(10)) => filterOptions;\n\n\n  var filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"value: \".concat(value !== null ? \"'\".concat(value, \"'\") : 'null')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"inputValue: '\".concat(inputValue, \"'\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      className: \"search-bar\",\n      value: value,\n      onChange: function onChange(event, newValue) {\n        setValue(newValue);\n      },\n      inputValue: inputValue,\n      onInputChange: function onInputChange(event, newInputValue) {\n        setInputValue(newInputValue);\n      },\n      id: \"controllable-states-demo\",\n      options: inputValue.length < 3 ? [] : options.map(function (option) {\n        return option.city + \", \" + option.country;\n      }),\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Controllable\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 32\n        }, _this);\n      },\n      filterOptions: filterOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SearchBar4, \"/ok7muqaJRhPLch78QiCZskBzqM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar4;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar4\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar4.js"],"names":["React","TextField","Autocomplete","createFilterOptions","Button","makeStyles","cityList","options","useStyles","option","fontSize","backgroundColor","marginRight","handleChange","event","setSearch","target","value","handleClearSearch","handleSubmit","search","length","router","push","SearchBar4","classes","useState","setValue","inputValue","setInputValue","filterOptions","limit","matchFrom","newValue","newInputValue","map","city","country","width","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Button from \"./Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { cityList } from \"../public/city-list\";\n\n\nconst options = cityList;\n\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 12,\n    backgroundColor: \"white\",\n    '& > span': {\n      marginRight: 10,\n      fontSize: 12,\n    },\n  },\n});\n\nfunction handleChange(event) {\n  setSearch(event.target.value);\n}\n\nfunction handleClearSearch(event) {\n  setSearch(\"\");\n  handleSubmit(event);\n}\n\nasync function handleSubmit(event) {\n  if (search.length > 1) {\n    router.push(`/location?search=${search}`);\n    // setSearch(\"\");\n  }\n}\n\nexport default function SearchBar4() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  // createFilterOptions(config(10)) => filterOptions;\n\n  const filterOptions = createFilterOptions({\n    limit: 12,\n    matchFrom: 'start'\n  });\n\n\n  return (\n  <div>\n    <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\n    <div>{`inputValue: '${inputValue}'`}</div>\n    <br />\n    <Autocomplete\n      className=\"search-bar\"\n      value={value}\n      onChange={(event, newValue) => {setValue(newValue)}}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {setInputValue(newInputValue)}}\n      id=\"controllable-states-demo\"\n      options={inputValue.length < 3 ? [] : options.map(option => option.city + \", \" + option.country)}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Controllable\" variant=\"outlined\" />}\n      filterOptions={filterOptions}\n    />\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}