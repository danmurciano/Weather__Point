{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location({\n  city,\n  region,\n  country,\n  mapUrl,\n  geoResponse,\n  coordinates,\n  latitude,\n  longitude,\n  weatherData\n}) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = React.useState(\"Daily\");\n  const [search, setSearch] = React.useState(\"\");\n  const router = useRouter();\n  console.log(geoResponse);\n  const i = countries.findIndex(el => el.code === country);\n  const countryName = countries[i].name;\n  let regionAndCountry;\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return /*#__PURE__*/_jsxDEV(Daily, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Hourly\":\n        return /*#__PURE__*/_jsxDEV(Hourly, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Current\":\n        return /*#__PURE__*/_jsxDEV(Current, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n  }\n\n  const handleItemClick = (e, {\n    name\n  }) => this.setTimeRange({\n    activeItem: name\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-main\",\n      style: {\n        backgroundImage: `url(/images/${weather.current.icon}.jpg)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row location-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"location-city\",\n                  children: [\" \", city, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"location-country\",\n                  children: [\" \", regionAndCountry, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"map marker alternate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this), \" \", weather.coordinates, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  class: \"current-icon\",\n                  src: `/images/icons2/${weather.current.icon}.png`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", weather.current.conditions, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"location-temp\",\n                  children: [\" \", `${weather.current.temp}` + String.fromCharCode(176), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: mapUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(Current, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-buttom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"time-range-menu\",\n                children: /*#__PURE__*/_jsxDEV(Menu, {\n                  secondary: true,\n                  className: \"time-range-menu\",\n                  children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n                    className: \"time-menu-item\",\n                    name: \"Daily\",\n                    active: timeRange === 'Daily',\n                    onClick: () => setTimeRange('Daily')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                    className: \"time-menu-item\",\n                    name: \"Hourly\",\n                    active: timeRange === 'Hourly',\n                    onClick: () => setTimeRange('Hourly')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                    className: \"time-menu-item\",\n                    name: \"Current\",\n                    active: timeRange === 'Current',\n                    onClick: () => setTimeRange('Current')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: timeRangeSelect(timeRange)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\nLocation.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1&thumbMaps=true`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const city = geoData.adminArea5;\n  const region = geoData.adminArea3;\n  const country = geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  const mapUrl = geoData.mapUrl;\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  const weatherData = response2.data;\n  return {\n    city,\n    region,\n    country,\n    mapUrl,\n    geoResponse,\n    latitude,\n    longitude,\n    weatherData\n  };\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","use","useRouter","axios","Header","Current","Daily","Hourly","Container","Divider","Icon","Menu","countries","baseUrl","catchErrors","weatherResponse","_","Location","city","region","country","mapUrl","geoResponse","coordinates","latitude","longitude","weatherData","weather","timeRange","setTimeRange","useState","search","setSearch","router","console","log","i","findIndex","el","code","countryName","name","regionAndCountry","timeRangeSelect","handleItemClick","e","activeItem","backgroundImage","current","icon","conditions","temp","String","fromCharCode","getInitialProps","query","geoUrl","process","env","MAPQUEST_KEY","payload","headers","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { use } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../Components/_App/Header\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { countries } from \"../public/countries\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ city, region, country, mapUrl, geoResponse, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = React.useState(\"Daily\");\n  const [search, setSearch] = React.useState(\"\");\n\n  const router = useRouter();\n\n  console.log(geoResponse);\n\n\n  const i = countries.findIndex(el => el.code === country);\n  const countryName = countries[i].name;\n  let regionAndCountry\n\n  if (region && region !== city) {\n    regionAndCountry = region + \", \" + countryName;\n  } else {\n    regionAndCountry = countryName;\n  }\n\n\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return <Daily weather={weather} />\n        break;\n      case \"Hourly\":\n        return <Hourly weather={weather} />\n        break;\n      case \"Current\":\n        return <Current weather={weather} />\n        break;\n    }\n  }\n\n  const handleItemClick = (e, { name }) => this.setTimeRange({ activeItem: name });\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header/>\n\n      <div class=\"\">\n        <div class=\"location-main\">\n          <div class=\"location-results\">\n            <div class=\"row location-top\">\n              <div class=\"col-6\">\n                <p class=\"location-city\"> {city} </p>\n                <p class=\"location-country\"> {regionAndCountry} </p>\n                <p> <Icon name=\"map marker alternate\"/> {weather.coordinates} </p>\n                <img class=\"current-icon\" src={`/images/icons2/${weather.current.icon}.png`}/>\n                <p> {weather.current.conditions} </p>\n                <p class=\"location-temp\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n                <img src={mapUrl} />\n              </div>\n              <div class=\"col-6\">\n                <Current weather={weather} />\n              </div>\n            </div>\n\n            <div class=\"location-buttom\">\n              <div class=\"time-range-menu\">\n                <Menu secondary className=\"time-range-menu\">\n                  <Menu.Item\n                    className=\"time-menu-item\"\n                    name='Daily'\n                    active={timeRange === 'Daily'}\n                    onClick={() => setTimeRange('Daily')}\n                  />\n                  <Menu.Item\n                    className=\"time-menu-item\"\n                    name='Hourly'\n                    active={timeRange === 'Hourly'}\n                    onClick={() => setTimeRange('Hourly')}\n                  />\n                  <Menu.Item\n                    className=\"time-menu-item\"\n                    name='Current'\n                    active={timeRange === 'Current'}\n                    onClick={() => setTimeRange('Current')}\n                  />\n                </Menu>\n              </div>\n\n              <div>\n                {timeRangeSelect(timeRange)}\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1&thumbMaps=true`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const city = geoData.adminArea5;\n  const region = geoData.adminArea3;\n  const country = geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  const mapUrl = geoData.mapUrl;\n\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  const weatherData = response2.data;\n  return { city, region, country, mapUrl, geoResponse, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}