{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/locationB.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\";\nimport LocationResults from \"../Components/LocationResults\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function LocationB(_ref) {\n  var location = _ref.location,\n      location2 = _ref.location2,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude,\n      weatherData = _ref.weatherData;\n  var weather = weatherResponse(weatherData);\n  console.log(weather);\n\n  function mapDailyData(daily) {\n    var _this = this;\n\n    return daily.map(function (d) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"class\": \"daily-data\",\n            children: [\" \", \"\".concat(d.day), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"class\": \"daily-icon\",\n            src: \"http://openweathermap.org/img/wn/\".concat(d.icon, \"@2x.png\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"class\": \"daily-data\",\n            children: [\" \", \"\".concat(d.max) + String.fromCharCode(176), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"class\": \"daily-data\",\n            children: [\" \", \"\".concat(d.min) + String.fromCharCode(176), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, _this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"class\": \"page-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"container-fluid footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = LocationB;\n\nLocationB.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var search, geoUrl, payload, geoResponse, geoData, location, location2, latitude, longitude, baseUrl, payload2, weatherUrl, weatherUrl2, weatherUrl3, response2, weatherData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref2.query.search;\n            geoUrl = \"https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=\".concat(process.env.MAPQUEST_KEY, \"&location=\").concat(search, \"&maxResults=1\");\n            payload = {\n              headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              }\n            };\n            _context.next = 5;\n            return axios.get(geoUrl, payload);\n\n          case 5:\n            geoResponse = _context.sent;\n            geoData = geoResponse.data.results[0].locations[0];\n            location = geoData.adminArea5;\n            location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n            latitude = geoData.latLng.lat;\n            longitude = geoData.latLng.lng; // const location = \"Burbank\";\n            // const location2 = \"CA, US\";\n            // const latitude = 34.2;\n            // const longitude = -118.33;\n\n            baseUrl = \"https://cors-anywhere.herokuapp.com/https://api.weather.com/swagger-docs/sun\";\n            payload2 = {\n              headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              },\n              apiKey: process.env.WEATHER_KEY_B\n            };\n            weatherUrl = \"\".concat(baseUrl, \"/v3/sunV3CurrentsOnDemand.json\").concat(latitude, \"&lon=\").concat(longitude, \"&units={imperial}&appid=\").concat(process.env.WEATHER_KEY);\n            weatherUrl2 = \"\".concat(baseUrl, \"/v1/geocode/{\").concat(latitude, \"}/{\").concat(longitude, \"}/forecast/daily/{10}day.json\");\n            weatherUrl3 = \"\".concat(baseUrl, \"/v1/geocode/{\").concat(latitude, \"}/{\").concat(longitude, \"}/forecast/hourly/{24}hour.json\");\n            _context.next = 18;\n            return axios.get(weatherUrl2, payload2);\n\n          case 18:\n            response2 = _context.sent;\n            // const weatherData = response2.data;\n            weatherData = response2.data;\n            return _context.abrupt(\"return\", {\n              location: location,\n              location2: location2,\n              latitude: latitude,\n              longitude: longitude,\n              weatherData: weatherData\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationB\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/locationB.js"],"names":["React","useState","axios","Header","Footer","Button","Table","LocationResults","Container","Divider","SearchBar","baseUrl","catchErrors","weatherResponse","_","LocationB","location","location2","latitude","longitude","weatherData","weather","console","log","mapDailyData","daily","map","d","day","icon","max","String","fromCharCode","min","getInitialProps","search","query","geoUrl","process","env","MAPQUEST_KEY","payload","headers","get","geoResponse","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","payload2","apiKey","WEATHER_KEY_B","weatherUrl","WEATHER_KEY","weatherUrl2","weatherUrl3","response2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\nimport Table from \"../Components/Table\"\nimport LocationResults from \"../Components/LocationResults\"\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function LocationB({ location, location2, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  console.log(weather);\n\n  function mapDailyData(daily) {\n    return daily.map(d => (\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <p class=\"daily-data\"> {`${d.day}`} </p>\n        </div>\n        <div class=\"col-4\">\n          <img class=\"daily-icon\" src={`http://openweathermap.org/img/wn/${d.icon}@2x.png`}/>\n        </div>\n        <div class=\"col-2\">\n          <p class=\"daily-data\"> {`${d.max}` + String.fromCharCode(176)} </p>\n        </div>\n        <div class=\"col-2\">\n          <p class=\"daily-data\"> {`${d.min}` + String.fromCharCode(176)} </p>\n        </div>\n      </div>\n    ))\n  }\n\n\n  return (\n    <div class=\"page-main\">\n      <Header />\n\n\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n    </div>\n  );\n}\n\nLocationB.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const baseUrl = \"https://cors-anywhere.herokuapp.com/https://api.weather.com/swagger-docs/sun\"\n  const payload2 = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" }, apiKey: process.env.WEATHER_KEY_B }\n  const weatherUrl = `${baseUrl}/v3/sunV3CurrentsOnDemand.json${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const weatherUrl2 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/daily/{10}day.json`;\n  const weatherUrl3 = `${baseUrl}/v1/geocode/{${latitude}}/{${longitude}}/forecast/hourly/{24}hour.json`;\n  const response2 = await axios.get(weatherUrl2, payload2);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, location2, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}