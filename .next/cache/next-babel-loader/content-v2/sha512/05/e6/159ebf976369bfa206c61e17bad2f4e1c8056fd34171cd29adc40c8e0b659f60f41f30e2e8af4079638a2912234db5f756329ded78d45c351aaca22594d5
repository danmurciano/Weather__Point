{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\"; // import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\n\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location({\n  location,\n  location2,\n  coordinates,\n  latitude,\n  longitude,\n  weatherData\n}) {\n  const weather = weatherResponse(weatherData);\n  const {\n    0: timeRange,\n    1: setTimeRange\n  } = useState(\"Daily\"); // console.log(weather.locationInfo, latitude, longitude);\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return /*#__PURE__*/_jsxDEV(Daily, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Hourly\":\n        return /*#__PURE__*/_jsxDEV(Hourly, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case \"Current\":\n        return /*#__PURE__*/_jsxDEV(Current, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n  }\n\n  const handleItemClick = (e, {\n    name\n  }) => this.setTimeRange({\n    activeItem: name\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-main\",\n      style: {\n        backgroundImage: `url(/images/${weather.current.icon}.jpg)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-name\",\n                children: [\" \", location, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", location2, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 52\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"map marker alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), \" \", weather.coordinates, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"daily-icon\",\n                src: `/images/icons/${weather.current.icon}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", weather.current.conditions, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"location-temp location-row\",\n                children: [\" \", `${weather.current.temp}` + String.fromCharCode(176), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"location-buttom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"\",\n                children: /*#__PURE__*/_jsxDEV(Menu, {\n                  secondary: true,\n                  className: \"time-range-menu\",\n                  children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n                    name: \"Daily\",\n                    active: timeRange === 'Daily',\n                    onClick: () => setTimeRange('Daily')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                    name: \"Hourly\",\n                    active: timeRange === 'Hourly',\n                    onClick: () => setTimeRange('Hourly')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                    name: \"Current\",\n                    active: timeRange === 'Current',\n                    onClick: () => setTimeRange('Current')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: timeRangeSelect(timeRange)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\nLocation.getInitialProps = async ({\n  query: {\n    search\n  }\n}) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng; // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload); // const weatherData = response2.data;\n\n  const weatherData = response2.data;\n  return {\n    location,\n    location2,\n    latitude,\n    longitude,\n    weatherData\n  };\n};","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","useState","axios","Header","Footer","Button","Current","Daily","Hourly","Container","Divider","Icon","Menu","SearchBar","baseUrl","catchErrors","weatherResponse","_","Location","location","location2","coordinates","latitude","longitude","weatherData","weather","timeRange","setTimeRange","timeRangeSelect","handleItemClick","e","name","activeItem","backgroundImage","current","icon","conditions","temp","String","fromCharCode","getInitialProps","query","search","geoUrl","process","env","MAPQUEST_KEY","payload","headers","geoResponse","get","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\n// import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Hourly from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ location, location2, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = useState(\"Daily\");\n  // console.log(weather.locationInfo, latitude, longitude);\n\n  function timeRangeSelect(timeRange) {\n    switch (timeRange) {\n      case \"Daily\":\n        return <Daily weather={weather} />\n        break;\n      case \"Hourly\":\n        return <Hourly weather={weather} />\n        break;\n      case \"Current\":\n        return <Current weather={weather} />\n        break;\n    }\n  }\n\n  const handleItemClick = (e, { name }) => this.setTimeRange({ activeItem: name });\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header />\n\n      <div class=\"\">\n        <div class=\"location-main\">\n\n          <div class=\"location-results\">\n            <div class=\"location-top\">\n              <p class=\"location-name\"> {location} <span> {location2} </span> </p>\n              <p> <Icon name=\"map marker alternate\"/> {weather.coordinates} </p>\n              <img class=\"daily-icon\" src={`/images/icons/${weather.current.icon}.png`}/>\n              <p> {weather.current.conditions} </p>\n              <p class=\"location-temp location-row\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n            </div>\n\n            <div class=\"location-buttom\">\n              <div class=\"\">\n                <Menu secondary className=\"time-range-menu\">\n                  <Menu.Item\n                    name='Daily'\n                    active={timeRange === 'Daily'}\n                    onClick={() => setTimeRange('Daily')}\n                  />\n                  <Menu.Item\n                    name='Hourly'\n                    active={timeRange === 'Hourly'}\n                    onClick={() => setTimeRange('Hourly')}\n                  />\n                  <Menu.Item\n                    name='Current'\n                    active={timeRange === 'Current'}\n                    onClick={() => setTimeRange('Current')}\n                  />\n                </Menu>\n              </div>\n\n              <div>\n                {timeRangeSelect(timeRange)}\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, location2, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}