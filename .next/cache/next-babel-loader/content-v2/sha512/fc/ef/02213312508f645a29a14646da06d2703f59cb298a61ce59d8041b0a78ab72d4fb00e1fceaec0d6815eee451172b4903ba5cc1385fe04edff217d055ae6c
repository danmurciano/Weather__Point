{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\"; // import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\n\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Houry from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\nexport default function Location(_ref) {\n  _s();\n\n  var location = _ref.location,\n      location2 = _ref.location2,\n      coordinates = _ref.coordinates,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude,\n      weatherData = _ref.weatherData;\n  var weather = weatherResponse(weatherData);\n\n  var _useState = useState(\"daily\"),\n      timeRange = _useState[0],\n      setTimeRange = _useState[1]; // console.log(weather.locationInfo, latitude, longitude);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"class\": \"page-main\",\n      style: {\n        backgroundImage: \"url(/images/\".concat(weather.current.icon, \".jpg)\")\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"location-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"class\": \"location-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"location-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                \"class\": \"location-name\",\n                children: [\" \", location, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", location2, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 52\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"map marker alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this), \" \", weather.coordinates, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                \"class\": \"daily-icon\",\n                src: \"/images/icons/\".concat(weather.current.icon, \".png\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", weather.current.conditions, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                \"class\": \"location-temp location-row\",\n                children: [\" \", \"\".concat(weather.current.temp) + String.fromCharCode(176), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"row location-buttom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"col-5 location-current\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \" Current \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Current, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"col-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                \"class\": \"col-6 location-daily\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \" Daily \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 17\n                }, this), timeRange === \"hourly\" ? /*#__PURE__*/_jsxDEV(Hourly, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/_jsxDEV(Daily, {\n                  weather: weather\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"container-fluid footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Location, \"+Kc+5JG/2NmG/YrqvBlyJ8F7hJI=\");\n\n_c = Location;\n\nLocation.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var search, geoUrl, payload, geoResponse, geoData, location, location2, latitude, longitude, weatherUrl, response2, weatherData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref2.query.search;\n            geoUrl = \"https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=\".concat(process.env.MAPQUEST_KEY, \"&location=\").concat(search, \"&maxResults=1\");\n            payload = {\n              headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n              }\n            };\n            _context.next = 5;\n            return axios.get(geoUrl, payload);\n\n          case 5:\n            geoResponse = _context.sent;\n            geoData = geoResponse.data.results[0].locations[0];\n            location = geoData.adminArea5;\n            location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n            latitude = geoData.latLng.lat;\n            longitude = geoData.latLng.lng; // const location = \"Burbank\";\n            // const location2 = \"CA, US\";\n            // const latitude = 34.2;\n            // const longitude = -118.33;\n\n            weatherUrl = \"https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&units={imperial}&appid=\").concat(process.env.WEATHER_KEY);\n            _context.next = 14;\n            return axios.get(weatherUrl, payload);\n\n          case 14:\n            response2 = _context.sent;\n            // const weatherData = response2.data;\n            weatherData = response2.data;\n            return _context.abrupt(\"return\", {\n              location: location,\n              location2: location2,\n              latitude: latitude,\n              longitude: longitude,\n              weatherData: weatherData\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/pages/location.js"],"names":["React","useState","axios","Header","Footer","Button","Current","Daily","Houry","Container","Divider","Icon","SearchBar","baseUrl","catchErrors","weatherResponse","_","Location","location","location2","coordinates","latitude","longitude","weatherData","weather","timeRange","setTimeRange","backgroundImage","current","icon","conditions","temp","String","fromCharCode","getInitialProps","search","query","geoUrl","process","env","MAPQUEST_KEY","payload","headers","get","geoResponse","geoData","data","results","locations","adminArea5","adminArea3","adminArea1","latLng","lat","lng","weatherUrl","WEATHER_KEY","response2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Button from \"../Components/Button\";\n// import Table from \"../Components/Table\";\n// import LocationResults from \"../Components/LocationResults\";\nimport Current from \"../Components/Location/Current\";\nimport Daily from \"../Components/Location/Daily\";\nimport Houry from \"../Components/Location/Hourly\";\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport { Icon } from \"semantic-ui-react\";\nimport SearchBar from \"../Components/SearchBar\"\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nimport weatherResponse from \"../utils/weatherResponse\";\nimport { _ } from \"lodash\";\n\n\nexport default function Location({ location, location2, coordinates, latitude, longitude, weatherData }) {\n  const weather = weatherResponse(weatherData);\n  const [timeRange, setTimeRange] = useState(\"daily\");\n  // console.log(weather.locationInfo, latitude, longitude);\n\n\n\n\n  return (\n    <>\n    <div class=\"page-main\" style={{ backgroundImage: `url(/images/${weather.current.icon}.jpg)` }} >\n      <Header />\n\n      <div class=\"\">\n        <div class=\"location-main\">\n\n          <div class=\"location-results\">\n            <div class=\"location-top\">\n              <p class=\"location-name\"> {location} <span> {location2} </span> </p>\n              <p> <Icon name=\"map marker alternate\"/> {weather.coordinates} </p>\n              <img class=\"daily-icon\" src={`/images/icons/${weather.current.icon}.png`}/>\n              <p> {weather.current.conditions} </p>\n              <p class=\"location-temp location-row\"> {`${weather.current.temp}` + String.fromCharCode(176)} </p>\n            </div>\n\n            <div class=\"row location-buttom\">\n              <div class=\"col-5 location-current\">\n\n                <h3> Current </h3>\n                <Current weather={weather} />\n\n              </div>\n\n              <div class=\"col-1\"/>\n\n              <div class=\"col-6 location-daily\">\n                <h3> Daily </h3>\n                {timeRange === \"hourly\" ? (\n                  <Hourly weather={weather} />\n                ) : (\n                  <Daily weather={weather} />\n                )\n              }\n              </div>\n\n\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"container-fluid footer\">\n\n        </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nLocation.getInitialProps = async ({ query: { search } }) => {\n  const geoUrl = `https://cors-anywhere.herokuapp.com/http://open.mapquestapi.com/geocoding/v1/address?key=${process.env.MAPQUEST_KEY}&location=${search}&maxResults=1`;\n  const payload = { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } }\n  const geoResponse = await axios.get(geoUrl, payload);\n  const geoData = geoResponse.data.results[0].locations[0];\n  const location = geoData.adminArea5;\n  const location2 = geoData.adminArea3 + \", \" + geoData.adminArea1;\n  const latitude = geoData.latLng.lat;\n  const longitude = geoData.latLng.lng;\n  // const location = \"Burbank\";\n  // const location2 = \"CA, US\";\n  // const latitude = 34.2;\n  // const longitude = -118.33;\n\n  const weatherUrl = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units={imperial}&appid=${process.env.WEATHER_KEY}`;\n  const response2 = await axios.get(weatherUrl, payload);\n  // const weatherData = response2.data;\n  const weatherData = response2.data;\n  return { location, location2, latitude, longitude, weatherData };\n};\n"]},"metadata":{},"sourceType":"module"}