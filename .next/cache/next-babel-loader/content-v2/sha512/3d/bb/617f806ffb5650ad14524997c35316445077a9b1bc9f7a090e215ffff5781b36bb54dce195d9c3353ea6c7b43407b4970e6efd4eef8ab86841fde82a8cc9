{"ast":null,"code":"import _slicedToArray from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar2.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash'; // import faker from 'faker'\n\nimport React from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport { cityList } from \"../public/city-list\"; // const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nvar options = cityList;\nvar initialState = {\n  loading: false,\n  results: [],\n  value: ''\n};\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState;\n\n    case 'START_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        value: action.query\n      });\n\n    case 'FINISH_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        results: action.results\n      });\n\n    case 'UPDATE_SELECTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.selection\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nvar resultRenderer = function resultRenderer(_ref) {\n  var title = _ref.title;\n  return /*#__PURE__*/_jsxDEV(Label, {\n    content: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 39\n  }, _this);\n};\n\nexport default function SearchBar2() {\n  _s();\n\n  var _React$useReducer = React.useReducer(exampleReducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var loading = state.loading,\n      results = state.results,\n      value = state.value;\n  var timeoutRef = React.useRef();\n  var handleSearchChange = React.useCallback(function (e, data) {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = setTimeout(function () {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      var re = new RegExp(_.escapeRegExp(data.value), 'i');\n\n      var isMatch = function isMatch(result) {\n        return re.test(result.title);\n      };\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 6,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        loading: loading,\n        onResultSelect: function onResultSelect(e, data) {\n          return dispatch({\n            type: 'UPDATE_SELECTION',\n            selection: data.result.title\n          });\n        },\n        onSearchChange: handleSearchChange,\n        resultRenderer: resultRenderer,\n        results: results,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 10,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflowX: 'auto'\n          },\n          children: JSON.stringify({\n            loading: loading,\n            results: results,\n            value: value\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflowX: 'auto'\n          },\n          children: JSON.stringify(source, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar2, \"eyK34sYtN/wGlobeW5QOJcopodM=\");\n\n_c = SearchBar2;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar2\");","map":{"version":3,"sources":["/Users/danmurciano/Web-Dev/Projects/Ideal-Weather/Components/SearchBar2.js"],"names":["_","React","Search","Grid","Header","Segment","Label","cityList","options","initialState","loading","results","value","exampleReducer","state","action","type","query","selection","Error","resultRenderer","title","SearchBar2","useReducer","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","e","data","clearTimeout","current","setTimeout","length","re","RegExp","escapeRegExp","isMatch","result","test","filter","source","useEffect","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\n// import faker from 'faker'\nimport React from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nimport { cityList } from \"../public/city-list\";\n\n// const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nconst options = cityList;\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nexport default function SearchBar2() {\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n  const { loading, results, value } = state\n\n  const timeoutRef = React.useRef()\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n  return (\n    <Grid>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n          }\n          onSearchChange={handleSearchChange}\n          resultRenderer={resultRenderer}\n          results={results}\n          value={value}\n        />\n      </Grid.Column>\n\n      <Grid.Column width={10}>\n        <Segment>\n          <Header>State</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify({ loading, results, value }, null, 2)}\n          </pre>\n          <Header>Options</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify(source, null, 2)}\n          </pre>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}